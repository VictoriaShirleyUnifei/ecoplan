{
  "sentinel": {
    "mapid": "projects/infra-filament-408404/maps/e5c85584a2ed04421421a142f30b3395-383aa7aad3858446498d68d137d2bf82",
    "token": "",
    "urlFormat": "https://earthengine.googleapis.com/v1/projects/infra-filament-408404/maps/e5c85584a2ed04421421a142f30b3395-383aa7aad3858446498d68d137d2bf82/tiles/{z}/{x}/{y}",
    "image": {
      "xg": {
        "da": {
          "args": [
            {
              "description": "The condition that determines which result is returned. If this is not a boolean, it is interpreted as a boolean by the following rules:\n<ul>  <li>Numbers that are equal to 0 or a NaN are false.</li>  <li>Empty strings, lists and dictionaries are false.</li>  <li>Null is false.</li>  <li>Everything else is true.</li></ul>",
              "type": "Object",
              "name": "condition",
              "default": null,
              "optional": true
            },
            {
              "description": "The result to return if the condition is true.",
              "type": "Object",
              "name": "trueCase",
              "default": null,
              "optional": true
            },
            {
              "description": "The result to return if the condition is false.",
              "type": "Object",
              "name": "falseCase",
              "default": null,
              "optional": true
            }
          ],
          "description": "Selects one of its inputs based on a condition, similar to an if-then-else construct.",
          "returns": "Object",
          "name": "If"
        }
      },
      "args": {
        "condition": {
          "xg": {
            "da": {
              "args": [
                {
                  "description": "The left-hand value.",
                  "type": "Number",
                  "name": "left",
                  "default": null
                },
                {
                  "description": "The right-hand value.",
                  "type": "Number",
                  "name": "right",
                  "default": null
                }
              ],
              "description": "Returns 1 if and only if the first value is greater than the second.",
              "returns": "Number",
              "name": "Number.gt"
            }
          },
          "args": {
            "left": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The collection to count.",
                      "type": "FeatureCollection",
                      "name": "collection",
                      "default": null
                    }
                  ],
                  "description": "Returns the number of elements in the collection.",
                  "returns": "Integer",
                  "name": "Collection.size"
                }
              },
              "args": {
                "collection": {
                  "xg": {
                    "da": {
                      "args": [
                        {
                          "description": "The collection to filter.",
                          "type": "FeatureCollection",
                          "name": "collection",
                          "default": null
                        },
                        {
                          "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                          "type": "Object",
                          "name": "filter",
                          "default": null
                        }
                      ],
                      "description": "Applies a filter to a given collection.",
                      "returns": "FeatureCollection",
                      "name": "Collection.filter"
                    }
                  },
                  "args": {
                    "collection": {
                      "xg": {
                        "da": {
                          "args": [
                            {
                              "description": "The collection to filter.",
                              "type": "FeatureCollection",
                              "name": "collection",
                              "default": null
                            },
                            {
                              "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                              "type": "Object",
                              "name": "filter",
                              "default": null
                            }
                          ],
                          "description": "Applies a filter to a given collection.",
                          "returns": "FeatureCollection",
                          "name": "Collection.filter"
                        }
                      },
                      "args": {
                        "collection": {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "The collection to filter.",
                                  "type": "FeatureCollection",
                                  "name": "collection",
                                  "default": null
                                },
                                {
                                  "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                  "type": "Object",
                                  "name": "filter",
                                  "default": null
                                }
                              ],
                              "description": "Applies a filter to a given collection.",
                              "returns": "FeatureCollection",
                              "name": "Collection.filter"
                            }
                          },
                          "args": {
                            "collection": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "The asset ID of the image collection.",
                                      "type": "String",
                                      "name": "id",
                                      "default": null
                                    },
                                    {
                                      "description": "The version of the asset. -1 signifies the latest version.",
                                      "type": "Long",
                                      "name": "version",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Returns the image collection given its ID.",
                                  "returns": "ImageCollection",
                                  "name": "ImageCollection.load"
                                }
                              },
                              "args": {
                                "id": "COPERNICUS/S2_SR_HARMONIZED"
                              },
                              "ol": null,
                              "la": null
                            },
                            "filter": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                      "type": "String",
                                      "name": "leftField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                      "type": "Object",
                                      "name": "rightValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                      "type": "String",
                                      "name": "rightField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                      "type": "Object",
                                      "name": "leftValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The maximum reprojection error allowed during filter application.",
                                      "type": "ErrorMargin",
                                      "name": "maxError",
                                      "default": {
                                        "type": "ErrorMargin",
                                        "unit": "meters",
                                        "value": 0.1
                                      },
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                  "returns": "Filter",
                                  "name": "Filter.intersects"
                                }
                              },
                              "args": {
                                "leftField": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "ca": ".all"
                                },
                                "rightValue": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "The geometry of the feature.",
                                          "type": "Geometry",
                                          "name": "geometry",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The properties of the feature.",
                                          "type": "Dictionary",
                                          "name": "metadata",
                                          "default": {},
                                          "optional": true
                                        },
                                        {
                                          "description": "Obsolete; has no effect.",
                                          "type": "String",
                                          "name": "geometryKey",
                                          "default": null,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Returns a Feature composed of the given geometry and metadata.",
                                      "returns": "Feature",
                                      "name": "Feature"
                                    }
                                  },
                                  "args": {
                                    "geometry": {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "The geometry being buffered.",
                                              "type": "Geometry",
                                              "name": "geometry",
                                              "default": null
                                            },
                                            {
                                              "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                              "type": "Float",
                                              "name": "distance",
                                              "default": null
                                            },
                                            {
                                              "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                              "type": "ErrorMargin",
                                              "name": "maxError",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                              "type": "Projection",
                                              "name": "proj",
                                              "default": null,
                                              "optional": true
                                            }
                                          ],
                                          "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                          "returns": "Geometry",
                                          "name": "Geometry.buffer"
                                        }
                                      },
                                      "args": {
                                        "geometry": {
                                          "xg": null,
                                          "args": null,
                                          "ol": null,
                                          "la": null,
                                          "rm": "Point",
                                          "ja": [-45.4559, -22.4262],
                                          "da": null
                                        },
                                        "distance": {
                                          "xg": null,
                                          "args": null,
                                          "ol": null,
                                          "la": null,
                                          "ca": 5000
                                        }
                                      },
                                      "ol": null,
                                      "la": null
                                    }
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              },
                              "ol": null,
                              "la": null,
                              "na": [
                                {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                          "type": "String",
                                          "name": "leftField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                          "type": "Object",
                                          "name": "rightValue",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                          "type": "String",
                                          "name": "rightField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                          "type": "Object",
                                          "name": "leftValue",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The maximum reprojection error allowed during filter application.",
                                          "type": "ErrorMargin",
                                          "name": "maxError",
                                          "default": {
                                            "type": "ErrorMargin",
                                            "unit": "meters",
                                            "value": 0.1
                                          },
                                          "optional": true
                                        }
                                      ],
                                      "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                      "returns": "Filter",
                                      "name": "Filter.intersects"
                                    }
                                  },
                                  "args": {
                                    "leftField": {
                                      "xg": null,
                                      "args": null,
                                      "ol": null,
                                      "la": null,
                                      "ca": ".all"
                                    },
                                    "rightValue": {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "The geometry of the feature.",
                                              "type": "Geometry",
                                              "name": "geometry",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The properties of the feature.",
                                              "type": "Dictionary",
                                              "name": "metadata",
                                              "default": {},
                                              "optional": true
                                            },
                                            {
                                              "description": "Obsolete; has no effect.",
                                              "type": "String",
                                              "name": "geometryKey",
                                              "default": null,
                                              "optional": true
                                            }
                                          ],
                                          "description": "Returns a Feature composed of the given geometry and metadata.",
                                          "returns": "Feature",
                                          "name": "Feature"
                                        }
                                      },
                                      "args": {
                                        "geometry": {
                                          "xg": {
                                            "da": {
                                              "args": [
                                                {
                                                  "description": "The geometry being buffered.",
                                                  "type": "Geometry",
                                                  "name": "geometry",
                                                  "default": null
                                                },
                                                {
                                                  "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                                  "type": "Float",
                                                  "name": "distance",
                                                  "default": null
                                                },
                                                {
                                                  "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                                  "type": "ErrorMargin",
                                                  "name": "maxError",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                                  "type": "Projection",
                                                  "name": "proj",
                                                  "default": null,
                                                  "optional": true
                                                }
                                              ],
                                              "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                              "returns": "Geometry",
                                              "name": "Geometry.buffer"
                                            }
                                          },
                                          "args": {
                                            "geometry": {
                                              "xg": null,
                                              "args": null,
                                              "ol": null,
                                              "la": null,
                                              "rm": "Point",
                                              "ja": [-45.4559, -22.4262],
                                              "da": null
                                            },
                                            "distance": {
                                              "xg": null,
                                              "args": null,
                                              "ol": null,
                                              "la": null,
                                              "ca": 5000
                                            }
                                          },
                                          "ol": null,
                                          "la": null
                                        }
                                      },
                                      "ol": null,
                                      "la": null
                                    }
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              ]
                            }
                          },
                          "ol": null
                        },
                        "filter": {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                  "type": "String",
                                  "name": "leftField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                  "type": "Object",
                                  "name": "rightValue",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                  "type": "String",
                                  "name": "rightField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                  "type": "Object",
                                  "name": "leftValue",
                                  "default": null,
                                  "optional": true
                                }
                              ],
                              "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                              "returns": "Filter",
                              "name": "Filter.dateRangeContains"
                            }
                          },
                          "args": {
                            "rightField": {
                              "xg": null,
                              "args": null,
                              "ol": null,
                              "la": null,
                              "ca": "system:time_start"
                            },
                            "leftValue": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "",
                                      "type": "Object",
                                      "name": "start",
                                      "default": null
                                    },
                                    {
                                      "description": "",
                                      "type": "Object",
                                      "name": "end",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                      "type": "String",
                                      "name": "timeZone",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                  "returns": "DateRange",
                                  "name": "DateRange",
                                  "isConstructor": true
                                }
                              },
                              "args": {
                                "start": "2024-01-01",
                                "end": "2024-12-31"
                              },
                              "ol": null,
                              "la": null
                            }
                          },
                          "ol": null,
                          "la": null,
                          "na": [
                            {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                      "type": "String",
                                      "name": "leftField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                      "type": "Object",
                                      "name": "rightValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                      "type": "String",
                                      "name": "rightField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                      "type": "Object",
                                      "name": "leftValue",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                                  "returns": "Filter",
                                  "name": "Filter.dateRangeContains"
                                }
                              },
                              "args": {
                                "rightField": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "ca": "system:time_start"
                                },
                                "leftValue": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "",
                                          "type": "Object",
                                          "name": "start",
                                          "default": null
                                        },
                                        {
                                          "description": "",
                                          "type": "Object",
                                          "name": "end",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                          "type": "String",
                                          "name": "timeZone",
                                          "default": null,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                      "returns": "DateRange",
                                      "name": "DateRange",
                                      "isConstructor": true
                                    }
                                  },
                                  "args": {
                                    "start": "2024-01-01",
                                    "end": "2024-12-31"
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              },
                              "ol": null,
                              "la": null
                            }
                          ]
                        }
                      },
                      "ol": null
                    },
                    "filter": {
                      "xg": {
                        "da": {
                          "args": [
                            {
                              "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                              "type": "String",
                              "name": "leftField",
                              "default": null,
                              "optional": true
                            },
                            {
                              "description": "The value of the right operand. Should not be specified if rightField is specified.",
                              "type": "Object",
                              "name": "rightValue",
                              "default": null,
                              "optional": true
                            },
                            {
                              "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                              "type": "String",
                              "name": "rightField",
                              "default": null,
                              "optional": true
                            },
                            {
                              "description": "The value of the left operand. Should not be specified if leftField is specified.",
                              "type": "Object",
                              "name": "leftValue",
                              "default": null,
                              "optional": true
                            }
                          ],
                          "description": "Creates a unary or binary filter that passes if the left operand is less than the right operand.",
                          "returns": "Filter",
                          "name": "Filter.lessThan"
                        }
                      },
                      "args": {
                        "leftField": {
                          "xg": null,
                          "args": null,
                          "ol": null,
                          "la": null,
                          "ca": "CLOUDY_PIXEL_PERCENTAGE"
                        },
                        "rightValue": 10
                      },
                      "ol": null,
                      "la": null,
                      "na": [
                        {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                  "type": "String",
                                  "name": "leftField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                  "type": "Object",
                                  "name": "rightValue",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                  "type": "String",
                                  "name": "rightField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                  "type": "Object",
                                  "name": "leftValue",
                                  "default": null,
                                  "optional": true
                                }
                              ],
                              "description": "Creates a unary or binary filter that passes if the left operand is less than the right operand.",
                              "returns": "Filter",
                              "name": "Filter.lessThan"
                            }
                          },
                          "args": {
                            "leftField": {
                              "xg": null,
                              "args": null,
                              "ol": null,
                              "la": null,
                              "ca": "CLOUDY_PIXEL_PERCENTAGE"
                            },
                            "rightValue": 10
                          },
                          "ol": null,
                          "la": null
                        }
                      ]
                    }
                  },
                  "ol": null
                }
              },
              "ol": null,
              "la": null,
              "ca": null
            },
            "right": {
              "xg": null,
              "args": null,
              "ol": null,
              "la": null,
              "ca": 0
            }
          },
          "ol": null,
          "la": null,
          "ca": null
        },
        "trueCase": {
          "xg": {
            "da": {
              "args": [
                {
                  "description": "The image to clip.",
                  "type": "Image",
                  "name": "input",
                  "default": null
                },
                {
                  "description": "The Geometry or Feature to clip to.",
                  "type": "Object",
                  "name": "geometry",
                  "default": null
                }
              ],
              "description": "Clips an image to a Geometry or Feature (use clipToCollection to clip an image to a FeatureCollection). The output bands correspond exactly to the input bands, except data not covered by the geometry is masked. The output image retains the metadata of the input image.",
              "returns": "Image",
              "name": "Image.clip"
            }
          },
          "args": {
            "input": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The image collection to reduce.",
                      "type": "ImageCollection",
                      "name": "collection",
                      "default": null
                    }
                  ],
                  "description": "Reduces an image collection by calculating the median of all values at each pixel across the stack of all matching bands. Bands are matched by name.",
                  "returns": "Image",
                  "name": "reduce.median"
                }
              },
              "args": {
                "collection": {
                  "xg": {
                    "da": {
                      "args": [
                        {
                          "description": "The collection to filter.",
                          "type": "FeatureCollection",
                          "name": "collection",
                          "default": null
                        },
                        {
                          "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                          "type": "Object",
                          "name": "filter",
                          "default": null
                        }
                      ],
                      "description": "Applies a filter to a given collection.",
                      "returns": "FeatureCollection",
                      "name": "Collection.filter"
                    }
                  },
                  "args": {
                    "collection": {
                      "xg": {
                        "da": {
                          "args": [
                            {
                              "description": "The collection to filter.",
                              "type": "FeatureCollection",
                              "name": "collection",
                              "default": null
                            },
                            {
                              "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                              "type": "Object",
                              "name": "filter",
                              "default": null
                            }
                          ],
                          "description": "Applies a filter to a given collection.",
                          "returns": "FeatureCollection",
                          "name": "Collection.filter"
                        }
                      },
                      "args": {
                        "collection": {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "The collection to filter.",
                                  "type": "FeatureCollection",
                                  "name": "collection",
                                  "default": null
                                },
                                {
                                  "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                  "type": "Object",
                                  "name": "filter",
                                  "default": null
                                }
                              ],
                              "description": "Applies a filter to a given collection.",
                              "returns": "FeatureCollection",
                              "name": "Collection.filter"
                            }
                          },
                          "args": {
                            "collection": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "The asset ID of the image collection.",
                                      "type": "String",
                                      "name": "id",
                                      "default": null
                                    },
                                    {
                                      "description": "The version of the asset. -1 signifies the latest version.",
                                      "type": "Long",
                                      "name": "version",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Returns the image collection given its ID.",
                                  "returns": "ImageCollection",
                                  "name": "ImageCollection.load"
                                }
                              },
                              "args": {
                                "id": "COPERNICUS/S2_SR_HARMONIZED"
                              },
                              "ol": null,
                              "la": null
                            },
                            "filter": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                      "type": "String",
                                      "name": "leftField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                      "type": "Object",
                                      "name": "rightValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                      "type": "String",
                                      "name": "rightField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                      "type": "Object",
                                      "name": "leftValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The maximum reprojection error allowed during filter application.",
                                      "type": "ErrorMargin",
                                      "name": "maxError",
                                      "default": {
                                        "type": "ErrorMargin",
                                        "unit": "meters",
                                        "value": 0.1
                                      },
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                  "returns": "Filter",
                                  "name": "Filter.intersects"
                                }
                              },
                              "args": {
                                "leftField": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "ca": ".all"
                                },
                                "rightValue": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "The geometry of the feature.",
                                          "type": "Geometry",
                                          "name": "geometry",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The properties of the feature.",
                                          "type": "Dictionary",
                                          "name": "metadata",
                                          "default": {},
                                          "optional": true
                                        },
                                        {
                                          "description": "Obsolete; has no effect.",
                                          "type": "String",
                                          "name": "geometryKey",
                                          "default": null,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Returns a Feature composed of the given geometry and metadata.",
                                      "returns": "Feature",
                                      "name": "Feature"
                                    }
                                  },
                                  "args": {
                                    "geometry": {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "The geometry being buffered.",
                                              "type": "Geometry",
                                              "name": "geometry",
                                              "default": null
                                            },
                                            {
                                              "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                              "type": "Float",
                                              "name": "distance",
                                              "default": null
                                            },
                                            {
                                              "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                              "type": "ErrorMargin",
                                              "name": "maxError",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                              "type": "Projection",
                                              "name": "proj",
                                              "default": null,
                                              "optional": true
                                            }
                                          ],
                                          "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                          "returns": "Geometry",
                                          "name": "Geometry.buffer"
                                        }
                                      },
                                      "args": {
                                        "geometry": {
                                          "xg": null,
                                          "args": null,
                                          "ol": null,
                                          "la": null,
                                          "rm": "Point",
                                          "ja": [-45.4559, -22.4262],
                                          "da": null
                                        },
                                        "distance": {
                                          "xg": null,
                                          "args": null,
                                          "ol": null,
                                          "la": null,
                                          "ca": 5000
                                        }
                                      },
                                      "ol": null,
                                      "la": null
                                    }
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              },
                              "ol": null,
                              "la": null,
                              "na": [
                                {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                          "type": "String",
                                          "name": "leftField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                          "type": "Object",
                                          "name": "rightValue",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                          "type": "String",
                                          "name": "rightField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                          "type": "Object",
                                          "name": "leftValue",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The maximum reprojection error allowed during filter application.",
                                          "type": "ErrorMargin",
                                          "name": "maxError",
                                          "default": {
                                            "type": "ErrorMargin",
                                            "unit": "meters",
                                            "value": 0.1
                                          },
                                          "optional": true
                                        }
                                      ],
                                      "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                      "returns": "Filter",
                                      "name": "Filter.intersects"
                                    }
                                  },
                                  "args": {
                                    "leftField": {
                                      "xg": null,
                                      "args": null,
                                      "ol": null,
                                      "la": null,
                                      "ca": ".all"
                                    },
                                    "rightValue": {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "The geometry of the feature.",
                                              "type": "Geometry",
                                              "name": "geometry",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The properties of the feature.",
                                              "type": "Dictionary",
                                              "name": "metadata",
                                              "default": {},
                                              "optional": true
                                            },
                                            {
                                              "description": "Obsolete; has no effect.",
                                              "type": "String",
                                              "name": "geometryKey",
                                              "default": null,
                                              "optional": true
                                            }
                                          ],
                                          "description": "Returns a Feature composed of the given geometry and metadata.",
                                          "returns": "Feature",
                                          "name": "Feature"
                                        }
                                      },
                                      "args": {
                                        "geometry": {
                                          "xg": {
                                            "da": {
                                              "args": [
                                                {
                                                  "description": "The geometry being buffered.",
                                                  "type": "Geometry",
                                                  "name": "geometry",
                                                  "default": null
                                                },
                                                {
                                                  "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                                  "type": "Float",
                                                  "name": "distance",
                                                  "default": null
                                                },
                                                {
                                                  "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                                  "type": "ErrorMargin",
                                                  "name": "maxError",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                                  "type": "Projection",
                                                  "name": "proj",
                                                  "default": null,
                                                  "optional": true
                                                }
                                              ],
                                              "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                              "returns": "Geometry",
                                              "name": "Geometry.buffer"
                                            }
                                          },
                                          "args": {
                                            "geometry": {
                                              "xg": null,
                                              "args": null,
                                              "ol": null,
                                              "la": null,
                                              "rm": "Point",
                                              "ja": [-45.4559, -22.4262],
                                              "da": null
                                            },
                                            "distance": {
                                              "xg": null,
                                              "args": null,
                                              "ol": null,
                                              "la": null,
                                              "ca": 5000
                                            }
                                          },
                                          "ol": null,
                                          "la": null
                                        }
                                      },
                                      "ol": null,
                                      "la": null
                                    }
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              ]
                            }
                          },
                          "ol": null
                        },
                        "filter": {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                  "type": "String",
                                  "name": "leftField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                  "type": "Object",
                                  "name": "rightValue",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                  "type": "String",
                                  "name": "rightField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                  "type": "Object",
                                  "name": "leftValue",
                                  "default": null,
                                  "optional": true
                                }
                              ],
                              "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                              "returns": "Filter",
                              "name": "Filter.dateRangeContains"
                            }
                          },
                          "args": {
                            "rightField": {
                              "xg": null,
                              "args": null,
                              "ol": null,
                              "la": null,
                              "ca": "system:time_start"
                            },
                            "leftValue": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "",
                                      "type": "Object",
                                      "name": "start",
                                      "default": null
                                    },
                                    {
                                      "description": "",
                                      "type": "Object",
                                      "name": "end",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                      "type": "String",
                                      "name": "timeZone",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                  "returns": "DateRange",
                                  "name": "DateRange",
                                  "isConstructor": true
                                }
                              },
                              "args": {
                                "start": "2024-01-01",
                                "end": "2024-12-31"
                              },
                              "ol": null,
                              "la": null
                            }
                          },
                          "ol": null,
                          "la": null,
                          "na": [
                            {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                      "type": "String",
                                      "name": "leftField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                      "type": "Object",
                                      "name": "rightValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                      "type": "String",
                                      "name": "rightField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                      "type": "Object",
                                      "name": "leftValue",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                                  "returns": "Filter",
                                  "name": "Filter.dateRangeContains"
                                }
                              },
                              "args": {
                                "rightField": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "ca": "system:time_start"
                                },
                                "leftValue": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "",
                                          "type": "Object",
                                          "name": "start",
                                          "default": null
                                        },
                                        {
                                          "description": "",
                                          "type": "Object",
                                          "name": "end",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                          "type": "String",
                                          "name": "timeZone",
                                          "default": null,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                      "returns": "DateRange",
                                      "name": "DateRange",
                                      "isConstructor": true
                                    }
                                  },
                                  "args": {
                                    "start": "2024-01-01",
                                    "end": "2024-12-31"
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              },
                              "ol": null,
                              "la": null
                            }
                          ]
                        }
                      },
                      "ol": null
                    },
                    "filter": {
                      "xg": {
                        "da": {
                          "args": [
                            {
                              "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                              "type": "String",
                              "name": "leftField",
                              "default": null,
                              "optional": true
                            },
                            {
                              "description": "The value of the right operand. Should not be specified if rightField is specified.",
                              "type": "Object",
                              "name": "rightValue",
                              "default": null,
                              "optional": true
                            },
                            {
                              "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                              "type": "String",
                              "name": "rightField",
                              "default": null,
                              "optional": true
                            },
                            {
                              "description": "The value of the left operand. Should not be specified if leftField is specified.",
                              "type": "Object",
                              "name": "leftValue",
                              "default": null,
                              "optional": true
                            }
                          ],
                          "description": "Creates a unary or binary filter that passes if the left operand is less than the right operand.",
                          "returns": "Filter",
                          "name": "Filter.lessThan"
                        }
                      },
                      "args": {
                        "leftField": {
                          "xg": null,
                          "args": null,
                          "ol": null,
                          "la": null,
                          "ca": "CLOUDY_PIXEL_PERCENTAGE"
                        },
                        "rightValue": 10
                      },
                      "ol": null,
                      "la": null,
                      "na": [
                        {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                  "type": "String",
                                  "name": "leftField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                  "type": "Object",
                                  "name": "rightValue",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                  "type": "String",
                                  "name": "rightField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                  "type": "Object",
                                  "name": "leftValue",
                                  "default": null,
                                  "optional": true
                                }
                              ],
                              "description": "Creates a unary or binary filter that passes if the left operand is less than the right operand.",
                              "returns": "Filter",
                              "name": "Filter.lessThan"
                            }
                          },
                          "args": {
                            "leftField": {
                              "xg": null,
                              "args": null,
                              "ol": null,
                              "la": null,
                              "ca": "CLOUDY_PIXEL_PERCENTAGE"
                            },
                            "rightValue": 10
                          },
                          "ol": null,
                          "la": null
                        }
                      ]
                    }
                  },
                  "ol": null
                }
              },
              "ol": null,
              "la": null
            },
            "geometry": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The geometry being buffered.",
                      "type": "Geometry",
                      "name": "geometry",
                      "default": null
                    },
                    {
                      "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                      "type": "Float",
                      "name": "distance",
                      "default": null
                    },
                    {
                      "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                      "type": "ErrorMargin",
                      "name": "maxError",
                      "default": null,
                      "optional": true
                    },
                    {
                      "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                      "type": "Projection",
                      "name": "proj",
                      "default": null,
                      "optional": true
                    }
                  ],
                  "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                  "returns": "Geometry",
                  "name": "Geometry.buffer"
                }
              },
              "args": {
                "geometry": {
                  "xg": null,
                  "args": null,
                  "ol": null,
                  "la": null,
                  "rm": "Point",
                  "ja": [-45.4559, -22.4262],
                  "da": null
                },
                "distance": {
                  "xg": null,
                  "args": null,
                  "ol": null,
                  "la": null,
                  "ca": 5000
                }
              },
              "ol": null,
              "la": null
            }
          },
          "ol": null,
          "la": null
        },
        "falseCase": {
          "xg": {
            "da": {
              "args": [
                {
                  "description": "The image to clip.",
                  "type": "Image",
                  "name": "input",
                  "default": null
                },
                {
                  "description": "The Geometry or Feature to clip to.",
                  "type": "Object",
                  "name": "geometry",
                  "default": null
                }
              ],
              "description": "Clips an image to a Geometry or Feature (use clipToCollection to clip an image to a FeatureCollection). The output bands correspond exactly to the input bands, except data not covered by the geometry is masked. The output image retains the metadata of the input image.",
              "returns": "Image",
              "name": "Image.clip"
            }
          },
          "args": {
            "input": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The image to mask with itself.",
                      "type": "Image",
                      "name": "image",
                      "default": null
                    }
                  ],
                  "description": "Updates an image's mask at all positions where the existing mask is not zero using the value of the image as the new mask value. The output image retains the metadata and footprint of the input image.",
                  "returns": "Image",
                  "name": "Image.selfMask"
                }
              },
              "args": {
                "image": {
                  "xg": {
                    "da": {
                      "args": [
                        {
                          "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                          "type": "Object",
                          "name": "value",
                          "default": null
                        }
                      ],
                      "description": "Generates an image containing a constant value everywhere.",
                      "returns": "Image",
                      "name": "Image.constant"
                    }
                  },
                  "args": {
                    "value": 0
                  },
                  "ol": null,
                  "la": null
                }
              },
              "ol": null,
              "la": null
            },
            "geometry": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The geometry being buffered.",
                      "type": "Geometry",
                      "name": "geometry",
                      "default": null
                    },
                    {
                      "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                      "type": "Float",
                      "name": "distance",
                      "default": null
                    },
                    {
                      "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                      "type": "ErrorMargin",
                      "name": "maxError",
                      "default": null,
                      "optional": true
                    },
                    {
                      "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                      "type": "Projection",
                      "name": "proj",
                      "default": null,
                      "optional": true
                    }
                  ],
                  "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                  "returns": "Geometry",
                  "name": "Geometry.buffer"
                }
              },
              "args": {
                "geometry": {
                  "xg": null,
                  "args": null,
                  "ol": null,
                  "la": null,
                  "rm": "Point",
                  "ja": [-45.4559, -22.4262],
                  "da": null
                },
                "distance": {
                  "xg": null,
                  "args": null,
                  "ol": null,
                  "la": null,
                  "ca": 5000
                }
              },
              "ol": null,
              "la": null
            }
          },
          "ol": null,
          "la": null
        }
      },
      "ol": null,
      "la": null
    }
  },
  "assentamentos": {
    "mapid": "projects/infra-filament-408404/maps/e224fe9da15db397df7c5ce3999526fe-69312c1a43de649a2bb1014c8cece638",
    "token": "",
    "urlFormat": "https://earthengine.googleapis.com/v1/projects/infra-filament-408404/maps/e224fe9da15db397df7c5ce3999526fe-69312c1a43de649a2bb1014c8cece638/tiles/{z}/{x}/{y}",
    "image": {
      "xg": {
        "da": {
          "args": [
            {
              "description": "The image to select bands from.",
              "type": "Image",
              "name": "input",
              "default": null
            },
            {
              "description": "A list of names, regexes, or numeric indices specifying the bands to select.",
              "type": "List",
              "name": "bandSelectors",
              "default": null
            },
            {
              "description": "Optional new names for the output bands. Must match the number of bands selected.",
              "type": "List",
              "name": "newNames",
              "default": null,
              "optional": true
            }
          ],
          "description": "Selects bands from an image by name, RE2-compatible regex, or index and optionally renames them.",
          "returns": "Image",
          "name": "Image.select"
        }
      },
      "args": {
        "input": {
          "xg": {
            "da": {
              "args": [
                {
                  "description": "The image to clip.",
                  "type": "Image",
                  "name": "input",
                  "default": null
                },
                {
                  "description": "The Geometry or Feature to clip to.",
                  "type": "Object",
                  "name": "geometry",
                  "default": null
                }
              ],
              "description": "Clips an image to a Geometry or Feature (use clipToCollection to clip an image to a FeatureCollection). The output bands correspond exactly to the input bands, except data not covered by the geometry is masked. The output image retains the metadata of the input image.",
              "returns": "Image",
              "name": "Image.clip"
            }
          },
          "args": {
            "input": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The asset ID of the image.",
                      "type": "String",
                      "name": "id",
                      "default": null
                    },
                    {
                      "description": "The version of the asset. -1 signifies the latest version.",
                      "type": "Long",
                      "name": "version",
                      "default": -1,
                      "optional": true
                    }
                  ],
                  "description": "Returns the image given its ID.",
                  "returns": "Image",
                  "name": "Image.load"
                }
              },
              "args": {
                "id": "JRC/GHSL/P2023A/GHS_BUILT_C/2018"
              },
              "ol": null,
              "la": null
            },
            "geometry": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The geometry being buffered.",
                      "type": "Geometry",
                      "name": "geometry",
                      "default": null
                    },
                    {
                      "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                      "type": "Float",
                      "name": "distance",
                      "default": null
                    },
                    {
                      "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                      "type": "ErrorMargin",
                      "name": "maxError",
                      "default": null,
                      "optional": true
                    },
                    {
                      "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                      "type": "Projection",
                      "name": "proj",
                      "default": null,
                      "optional": true
                    }
                  ],
                  "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                  "returns": "Geometry",
                  "name": "Geometry.buffer"
                }
              },
              "args": {
                "geometry": {
                  "xg": null,
                  "args": null,
                  "ol": null,
                  "la": null,
                  "rm": "Point",
                  "ja": [-45.4559, -22.4262],
                  "da": null
                },
                "distance": {
                  "xg": null,
                  "args": null,
                  "ol": null,
                  "la": null,
                  "ca": 5000
                }
              },
              "ol": null,
              "la": null
            }
          },
          "ol": null,
          "la": null
        },
        "bandSelectors": {
          "xg": null,
          "args": null,
          "ol": null,
          "la": null,
          "ca": ["built_characteristics"]
        }
      },
      "ol": null,
      "la": null
    }
  },
  "ndvi": {
    "mapid": "projects/infra-filament-408404/maps/7300daf6168d03ab20d3398bfc67314c-f4528df00e4c1e78251489f3148ee0b6",
    "token": "",
    "urlFormat": "https://earthengine.googleapis.com/v1/projects/infra-filament-408404/maps/7300daf6168d03ab20d3398bfc67314c-f4528df00e4c1e78251489f3148ee0b6/tiles/{z}/{x}/{y}",
    "image": {
      "xg": {
        "da": {
          "args": [
            {
              "description": "The input image.",
              "type": "Image",
              "name": "input",
              "default": null
            },
            {
              "description": "A list of names specifying the bands to use. If not specified, the first and second bands are used.",
              "type": "List",
              "name": "bandNames",
              "default": null,
              "optional": true
            }
          ],
          "description": "Computes the normalized difference between two bands. If the bands to use are not specified, uses the first two bands. The normalized difference is computed as (first − second) / (first + second). Note that the returned image band name is 'nd', the input image properties are not retained in the output image, and a negative pixel value in either input band will cause the output pixel to be masked. To avoid masking negative input values, use `ee.Image.expression()` to compute normalized difference.",
          "returns": "Image",
          "name": "Image.normalizedDifference"
        }
      },
      "args": {
        "input": {
          "xg": {
            "da": {
              "args": [
                {
                  "description": "The condition that determines which result is returned. If this is not a boolean, it is interpreted as a boolean by the following rules:\n<ul>  <li>Numbers that are equal to 0 or a NaN are false.</li>  <li>Empty strings, lists and dictionaries are false.</li>  <li>Null is false.</li>  <li>Everything else is true.</li></ul>",
                  "type": "Object",
                  "name": "condition",
                  "default": null,
                  "optional": true
                },
                {
                  "description": "The result to return if the condition is true.",
                  "type": "Object",
                  "name": "trueCase",
                  "default": null,
                  "optional": true
                },
                {
                  "description": "The result to return if the condition is false.",
                  "type": "Object",
                  "name": "falseCase",
                  "default": null,
                  "optional": true
                }
              ],
              "description": "Selects one of its inputs based on a condition, similar to an if-then-else construct.",
              "returns": "Object",
              "name": "If"
            }
          },
          "args": {
            "condition": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The left-hand value.",
                      "type": "Number",
                      "name": "left",
                      "default": null
                    },
                    {
                      "description": "The right-hand value.",
                      "type": "Number",
                      "name": "right",
                      "default": null
                    }
                  ],
                  "description": "Returns 1 if and only if the first value is greater than the second.",
                  "returns": "Number",
                  "name": "Number.gt"
                }
              },
              "args": {
                "left": {
                  "xg": {
                    "da": {
                      "args": [
                        {
                          "description": "The collection to count.",
                          "type": "FeatureCollection",
                          "name": "collection",
                          "default": null
                        }
                      ],
                      "description": "Returns the number of elements in the collection.",
                      "returns": "Integer",
                      "name": "Collection.size"
                    }
                  },
                  "args": {
                    "collection": {
                      "xg": {
                        "da": {
                          "args": [
                            {
                              "description": "The collection to filter.",
                              "type": "FeatureCollection",
                              "name": "collection",
                              "default": null
                            },
                            {
                              "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                              "type": "Object",
                              "name": "filter",
                              "default": null
                            }
                          ],
                          "description": "Applies a filter to a given collection.",
                          "returns": "FeatureCollection",
                          "name": "Collection.filter"
                        }
                      },
                      "args": {
                        "collection": {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "The collection to filter.",
                                  "type": "FeatureCollection",
                                  "name": "collection",
                                  "default": null
                                },
                                {
                                  "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                  "type": "Object",
                                  "name": "filter",
                                  "default": null
                                }
                              ],
                              "description": "Applies a filter to a given collection.",
                              "returns": "FeatureCollection",
                              "name": "Collection.filter"
                            }
                          },
                          "args": {
                            "collection": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "The collection to filter.",
                                      "type": "FeatureCollection",
                                      "name": "collection",
                                      "default": null
                                    },
                                    {
                                      "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                      "type": "Object",
                                      "name": "filter",
                                      "default": null
                                    }
                                  ],
                                  "description": "Applies a filter to a given collection.",
                                  "returns": "FeatureCollection",
                                  "name": "Collection.filter"
                                }
                              },
                              "args": {
                                "collection": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "The asset ID of the image collection.",
                                          "type": "String",
                                          "name": "id",
                                          "default": null
                                        },
                                        {
                                          "description": "The version of the asset. -1 signifies the latest version.",
                                          "type": "Long",
                                          "name": "version",
                                          "default": null,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Returns the image collection given its ID.",
                                      "returns": "ImageCollection",
                                      "name": "ImageCollection.load"
                                    }
                                  },
                                  "args": {
                                    "id": "COPERNICUS/S2_SR_HARMONIZED"
                                  },
                                  "ol": null,
                                  "la": null
                                },
                                "filter": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                          "type": "String",
                                          "name": "leftField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                          "type": "Object",
                                          "name": "rightValue",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                          "type": "String",
                                          "name": "rightField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                          "type": "Object",
                                          "name": "leftValue",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The maximum reprojection error allowed during filter application.",
                                          "type": "ErrorMargin",
                                          "name": "maxError",
                                          "default": {
                                            "type": "ErrorMargin",
                                            "unit": "meters",
                                            "value": 0.1
                                          },
                                          "optional": true
                                        }
                                      ],
                                      "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                      "returns": "Filter",
                                      "name": "Filter.intersects"
                                    }
                                  },
                                  "args": {
                                    "leftField": {
                                      "xg": null,
                                      "args": null,
                                      "ol": null,
                                      "la": null,
                                      "ca": ".all"
                                    },
                                    "rightValue": {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "The geometry of the feature.",
                                              "type": "Geometry",
                                              "name": "geometry",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The properties of the feature.",
                                              "type": "Dictionary",
                                              "name": "metadata",
                                              "default": {},
                                              "optional": true
                                            },
                                            {
                                              "description": "Obsolete; has no effect.",
                                              "type": "String",
                                              "name": "geometryKey",
                                              "default": null,
                                              "optional": true
                                            }
                                          ],
                                          "description": "Returns a Feature composed of the given geometry and metadata.",
                                          "returns": "Feature",
                                          "name": "Feature"
                                        }
                                      },
                                      "args": {
                                        "geometry": {
                                          "xg": {
                                            "da": {
                                              "args": [
                                                {
                                                  "description": "The geometry being buffered.",
                                                  "type": "Geometry",
                                                  "name": "geometry",
                                                  "default": null
                                                },
                                                {
                                                  "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                                  "type": "Float",
                                                  "name": "distance",
                                                  "default": null
                                                },
                                                {
                                                  "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                                  "type": "ErrorMargin",
                                                  "name": "maxError",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                                  "type": "Projection",
                                                  "name": "proj",
                                                  "default": null,
                                                  "optional": true
                                                }
                                              ],
                                              "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                              "returns": "Geometry",
                                              "name": "Geometry.buffer"
                                            }
                                          },
                                          "args": {
                                            "geometry": {
                                              "xg": null,
                                              "args": null,
                                              "ol": null,
                                              "la": null,
                                              "rm": "Point",
                                              "ja": [-45.4559, -22.4262],
                                              "da": null
                                            },
                                            "distance": {
                                              "xg": null,
                                              "args": null,
                                              "ol": null,
                                              "la": null,
                                              "ca": 5000
                                            }
                                          },
                                          "ol": null,
                                          "la": null
                                        }
                                      },
                                      "ol": null,
                                      "la": null
                                    }
                                  },
                                  "ol": null,
                                  "la": null,
                                  "na": [
                                    {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                              "type": "String",
                                              "name": "leftField",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                              "type": "Object",
                                              "name": "rightValue",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                              "type": "String",
                                              "name": "rightField",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                              "type": "Object",
                                              "name": "leftValue",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The maximum reprojection error allowed during filter application.",
                                              "type": "ErrorMargin",
                                              "name": "maxError",
                                              "default": {
                                                "type": "ErrorMargin",
                                                "unit": "meters",
                                                "value": 0.1
                                              },
                                              "optional": true
                                            }
                                          ],
                                          "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                          "returns": "Filter",
                                          "name": "Filter.intersects"
                                        }
                                      },
                                      "args": {
                                        "leftField": {
                                          "xg": null,
                                          "args": null,
                                          "ol": null,
                                          "la": null,
                                          "ca": ".all"
                                        },
                                        "rightValue": {
                                          "xg": {
                                            "da": {
                                              "args": [
                                                {
                                                  "description": "The geometry of the feature.",
                                                  "type": "Geometry",
                                                  "name": "geometry",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "The properties of the feature.",
                                                  "type": "Dictionary",
                                                  "name": "metadata",
                                                  "default": {},
                                                  "optional": true
                                                },
                                                {
                                                  "description": "Obsolete; has no effect.",
                                                  "type": "String",
                                                  "name": "geometryKey",
                                                  "default": null,
                                                  "optional": true
                                                }
                                              ],
                                              "description": "Returns a Feature composed of the given geometry and metadata.",
                                              "returns": "Feature",
                                              "name": "Feature"
                                            }
                                          },
                                          "args": {
                                            "geometry": {
                                              "xg": {
                                                "da": {
                                                  "args": [
                                                    {
                                                      "description": "The geometry being buffered.",
                                                      "type": "Geometry",
                                                      "name": "geometry",
                                                      "default": null
                                                    },
                                                    {
                                                      "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                                      "type": "Float",
                                                      "name": "distance",
                                                      "default": null
                                                    },
                                                    {
                                                      "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                                      "type": "ErrorMargin",
                                                      "name": "maxError",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                                      "type": "Projection",
                                                      "name": "proj",
                                                      "default": null,
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                                  "returns": "Geometry",
                                                  "name": "Geometry.buffer"
                                                }
                                              },
                                              "args": {
                                                "geometry": {
                                                  "xg": null,
                                                  "args": null,
                                                  "ol": null,
                                                  "la": null,
                                                  "rm": "Point",
                                                  "ja": [-45.4559, -22.4262],
                                                  "da": null
                                                },
                                                "distance": {
                                                  "xg": null,
                                                  "args": null,
                                                  "ol": null,
                                                  "la": null,
                                                  "ca": 5000
                                                }
                                              },
                                              "ol": null,
                                              "la": null
                                            }
                                          },
                                          "ol": null,
                                          "la": null
                                        }
                                      },
                                      "ol": null,
                                      "la": null
                                    }
                                  ]
                                }
                              },
                              "ol": null
                            },
                            "filter": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                      "type": "String",
                                      "name": "leftField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                      "type": "Object",
                                      "name": "rightValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                      "type": "String",
                                      "name": "rightField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                      "type": "Object",
                                      "name": "leftValue",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                                  "returns": "Filter",
                                  "name": "Filter.dateRangeContains"
                                }
                              },
                              "args": {
                                "rightField": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "ca": "system:time_start"
                                },
                                "leftValue": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "",
                                          "type": "Object",
                                          "name": "start",
                                          "default": null
                                        },
                                        {
                                          "description": "",
                                          "type": "Object",
                                          "name": "end",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                          "type": "String",
                                          "name": "timeZone",
                                          "default": null,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                      "returns": "DateRange",
                                      "name": "DateRange",
                                      "isConstructor": true
                                    }
                                  },
                                  "args": {
                                    "start": "2024-01-01",
                                    "end": "2024-12-31"
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              },
                              "ol": null,
                              "la": null,
                              "na": [
                                {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                          "type": "String",
                                          "name": "leftField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                          "type": "Object",
                                          "name": "rightValue",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                          "type": "String",
                                          "name": "rightField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                          "type": "Object",
                                          "name": "leftValue",
                                          "default": null,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                                      "returns": "Filter",
                                      "name": "Filter.dateRangeContains"
                                    }
                                  },
                                  "args": {
                                    "rightField": {
                                      "xg": null,
                                      "args": null,
                                      "ol": null,
                                      "la": null,
                                      "ca": "system:time_start"
                                    },
                                    "leftValue": {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "",
                                              "type": "Object",
                                              "name": "start",
                                              "default": null
                                            },
                                            {
                                              "description": "",
                                              "type": "Object",
                                              "name": "end",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                              "type": "String",
                                              "name": "timeZone",
                                              "default": null,
                                              "optional": true
                                            }
                                          ],
                                          "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                          "returns": "DateRange",
                                          "name": "DateRange",
                                          "isConstructor": true
                                        }
                                      },
                                      "args": {
                                        "start": "2024-01-01",
                                        "end": "2024-12-31"
                                      },
                                      "ol": null,
                                      "la": null
                                    }
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              ]
                            }
                          },
                          "ol": null
                        },
                        "filter": {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                  "type": "String",
                                  "name": "leftField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                  "type": "Object",
                                  "name": "rightValue",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                  "type": "String",
                                  "name": "rightField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                  "type": "Object",
                                  "name": "leftValue",
                                  "default": null,
                                  "optional": true
                                }
                              ],
                              "description": "Creates a unary or binary filter that passes if the left operand is less than the right operand.",
                              "returns": "Filter",
                              "name": "Filter.lessThan"
                            }
                          },
                          "args": {
                            "leftField": {
                              "xg": null,
                              "args": null,
                              "ol": null,
                              "la": null,
                              "ca": "CLOUDY_PIXEL_PERCENTAGE"
                            },
                            "rightValue": 10
                          },
                          "ol": null,
                          "la": null,
                          "na": [
                            {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                      "type": "String",
                                      "name": "leftField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                      "type": "Object",
                                      "name": "rightValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                      "type": "String",
                                      "name": "rightField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                      "type": "Object",
                                      "name": "leftValue",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a unary or binary filter that passes if the left operand is less than the right operand.",
                                  "returns": "Filter",
                                  "name": "Filter.lessThan"
                                }
                              },
                              "args": {
                                "leftField": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "ca": "CLOUDY_PIXEL_PERCENTAGE"
                                },
                                "rightValue": 10
                              },
                              "ol": null,
                              "la": null
                            }
                          ]
                        }
                      },
                      "ol": null
                    }
                  },
                  "ol": null,
                  "la": null,
                  "ca": null
                },
                "right": {
                  "xg": null,
                  "args": null,
                  "ol": null,
                  "la": null,
                  "ca": 0
                }
              },
              "ol": null,
              "la": null,
              "ca": null
            },
            "trueCase": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The image to clip.",
                      "type": "Image",
                      "name": "input",
                      "default": null
                    },
                    {
                      "description": "The Geometry or Feature to clip to.",
                      "type": "Object",
                      "name": "geometry",
                      "default": null
                    }
                  ],
                  "description": "Clips an image to a Geometry or Feature (use clipToCollection to clip an image to a FeatureCollection). The output bands correspond exactly to the input bands, except data not covered by the geometry is masked. The output image retains the metadata of the input image.",
                  "returns": "Image",
                  "name": "Image.clip"
                }
              },
              "args": {
                "input": {
                  "xg": {
                    "da": {
                      "args": [
                        {
                          "description": "The image collection to reduce.",
                          "type": "ImageCollection",
                          "name": "collection",
                          "default": null
                        }
                      ],
                      "description": "Reduces an image collection by calculating the median of all values at each pixel across the stack of all matching bands. Bands are matched by name.",
                      "returns": "Image",
                      "name": "reduce.median"
                    }
                  },
                  "args": {
                    "collection": {
                      "xg": {
                        "da": {
                          "args": [
                            {
                              "description": "The collection to filter.",
                              "type": "FeatureCollection",
                              "name": "collection",
                              "default": null
                            },
                            {
                              "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                              "type": "Object",
                              "name": "filter",
                              "default": null
                            }
                          ],
                          "description": "Applies a filter to a given collection.",
                          "returns": "FeatureCollection",
                          "name": "Collection.filter"
                        }
                      },
                      "args": {
                        "collection": {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "The collection to filter.",
                                  "type": "FeatureCollection",
                                  "name": "collection",
                                  "default": null
                                },
                                {
                                  "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                  "type": "Object",
                                  "name": "filter",
                                  "default": null
                                }
                              ],
                              "description": "Applies a filter to a given collection.",
                              "returns": "FeatureCollection",
                              "name": "Collection.filter"
                            }
                          },
                          "args": {
                            "collection": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "The collection to filter.",
                                      "type": "FeatureCollection",
                                      "name": "collection",
                                      "default": null
                                    },
                                    {
                                      "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                      "type": "Object",
                                      "name": "filter",
                                      "default": null
                                    }
                                  ],
                                  "description": "Applies a filter to a given collection.",
                                  "returns": "FeatureCollection",
                                  "name": "Collection.filter"
                                }
                              },
                              "args": {
                                "collection": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "The asset ID of the image collection.",
                                          "type": "String",
                                          "name": "id",
                                          "default": null
                                        },
                                        {
                                          "description": "The version of the asset. -1 signifies the latest version.",
                                          "type": "Long",
                                          "name": "version",
                                          "default": null,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Returns the image collection given its ID.",
                                      "returns": "ImageCollection",
                                      "name": "ImageCollection.load"
                                    }
                                  },
                                  "args": {
                                    "id": "COPERNICUS/S2_SR_HARMONIZED"
                                  },
                                  "ol": null,
                                  "la": null
                                },
                                "filter": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                          "type": "String",
                                          "name": "leftField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                          "type": "Object",
                                          "name": "rightValue",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                          "type": "String",
                                          "name": "rightField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                          "type": "Object",
                                          "name": "leftValue",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The maximum reprojection error allowed during filter application.",
                                          "type": "ErrorMargin",
                                          "name": "maxError",
                                          "default": {
                                            "type": "ErrorMargin",
                                            "unit": "meters",
                                            "value": 0.1
                                          },
                                          "optional": true
                                        }
                                      ],
                                      "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                      "returns": "Filter",
                                      "name": "Filter.intersects"
                                    }
                                  },
                                  "args": {
                                    "leftField": {
                                      "xg": null,
                                      "args": null,
                                      "ol": null,
                                      "la": null,
                                      "ca": ".all"
                                    },
                                    "rightValue": {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "The geometry of the feature.",
                                              "type": "Geometry",
                                              "name": "geometry",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The properties of the feature.",
                                              "type": "Dictionary",
                                              "name": "metadata",
                                              "default": {},
                                              "optional": true
                                            },
                                            {
                                              "description": "Obsolete; has no effect.",
                                              "type": "String",
                                              "name": "geometryKey",
                                              "default": null,
                                              "optional": true
                                            }
                                          ],
                                          "description": "Returns a Feature composed of the given geometry and metadata.",
                                          "returns": "Feature",
                                          "name": "Feature"
                                        }
                                      },
                                      "args": {
                                        "geometry": {
                                          "xg": {
                                            "da": {
                                              "args": [
                                                {
                                                  "description": "The geometry being buffered.",
                                                  "type": "Geometry",
                                                  "name": "geometry",
                                                  "default": null
                                                },
                                                {
                                                  "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                                  "type": "Float",
                                                  "name": "distance",
                                                  "default": null
                                                },
                                                {
                                                  "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                                  "type": "ErrorMargin",
                                                  "name": "maxError",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                                  "type": "Projection",
                                                  "name": "proj",
                                                  "default": null,
                                                  "optional": true
                                                }
                                              ],
                                              "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                              "returns": "Geometry",
                                              "name": "Geometry.buffer"
                                            }
                                          },
                                          "args": {
                                            "geometry": {
                                              "xg": null,
                                              "args": null,
                                              "ol": null,
                                              "la": null,
                                              "rm": "Point",
                                              "ja": [-45.4559, -22.4262],
                                              "da": null
                                            },
                                            "distance": {
                                              "xg": null,
                                              "args": null,
                                              "ol": null,
                                              "la": null,
                                              "ca": 5000
                                            }
                                          },
                                          "ol": null,
                                          "la": null
                                        }
                                      },
                                      "ol": null,
                                      "la": null
                                    }
                                  },
                                  "ol": null,
                                  "la": null,
                                  "na": [
                                    {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                              "type": "String",
                                              "name": "leftField",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                              "type": "Object",
                                              "name": "rightValue",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                              "type": "String",
                                              "name": "rightField",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                              "type": "Object",
                                              "name": "leftValue",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The maximum reprojection error allowed during filter application.",
                                              "type": "ErrorMargin",
                                              "name": "maxError",
                                              "default": {
                                                "type": "ErrorMargin",
                                                "unit": "meters",
                                                "value": 0.1
                                              },
                                              "optional": true
                                            }
                                          ],
                                          "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                          "returns": "Filter",
                                          "name": "Filter.intersects"
                                        }
                                      },
                                      "args": {
                                        "leftField": {
                                          "xg": null,
                                          "args": null,
                                          "ol": null,
                                          "la": null,
                                          "ca": ".all"
                                        },
                                        "rightValue": {
                                          "xg": {
                                            "da": {
                                              "args": [
                                                {
                                                  "description": "The geometry of the feature.",
                                                  "type": "Geometry",
                                                  "name": "geometry",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "The properties of the feature.",
                                                  "type": "Dictionary",
                                                  "name": "metadata",
                                                  "default": {},
                                                  "optional": true
                                                },
                                                {
                                                  "description": "Obsolete; has no effect.",
                                                  "type": "String",
                                                  "name": "geometryKey",
                                                  "default": null,
                                                  "optional": true
                                                }
                                              ],
                                              "description": "Returns a Feature composed of the given geometry and metadata.",
                                              "returns": "Feature",
                                              "name": "Feature"
                                            }
                                          },
                                          "args": {
                                            "geometry": {
                                              "xg": {
                                                "da": {
                                                  "args": [
                                                    {
                                                      "description": "The geometry being buffered.",
                                                      "type": "Geometry",
                                                      "name": "geometry",
                                                      "default": null
                                                    },
                                                    {
                                                      "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                                      "type": "Float",
                                                      "name": "distance",
                                                      "default": null
                                                    },
                                                    {
                                                      "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                                      "type": "ErrorMargin",
                                                      "name": "maxError",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                                      "type": "Projection",
                                                      "name": "proj",
                                                      "default": null,
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                                  "returns": "Geometry",
                                                  "name": "Geometry.buffer"
                                                }
                                              },
                                              "args": {
                                                "geometry": {
                                                  "xg": null,
                                                  "args": null,
                                                  "ol": null,
                                                  "la": null,
                                                  "rm": "Point",
                                                  "ja": [-45.4559, -22.4262],
                                                  "da": null
                                                },
                                                "distance": {
                                                  "xg": null,
                                                  "args": null,
                                                  "ol": null,
                                                  "la": null,
                                                  "ca": 5000
                                                }
                                              },
                                              "ol": null,
                                              "la": null
                                            }
                                          },
                                          "ol": null,
                                          "la": null
                                        }
                                      },
                                      "ol": null,
                                      "la": null
                                    }
                                  ]
                                }
                              },
                              "ol": null
                            },
                            "filter": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                      "type": "String",
                                      "name": "leftField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                      "type": "Object",
                                      "name": "rightValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                      "type": "String",
                                      "name": "rightField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                      "type": "Object",
                                      "name": "leftValue",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                                  "returns": "Filter",
                                  "name": "Filter.dateRangeContains"
                                }
                              },
                              "args": {
                                "rightField": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "ca": "system:time_start"
                                },
                                "leftValue": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "",
                                          "type": "Object",
                                          "name": "start",
                                          "default": null
                                        },
                                        {
                                          "description": "",
                                          "type": "Object",
                                          "name": "end",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                          "type": "String",
                                          "name": "timeZone",
                                          "default": null,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                      "returns": "DateRange",
                                      "name": "DateRange",
                                      "isConstructor": true
                                    }
                                  },
                                  "args": {
                                    "start": "2024-01-01",
                                    "end": "2024-12-31"
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              },
                              "ol": null,
                              "la": null,
                              "na": [
                                {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                          "type": "String",
                                          "name": "leftField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                          "type": "Object",
                                          "name": "rightValue",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                          "type": "String",
                                          "name": "rightField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                          "type": "Object",
                                          "name": "leftValue",
                                          "default": null,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                                      "returns": "Filter",
                                      "name": "Filter.dateRangeContains"
                                    }
                                  },
                                  "args": {
                                    "rightField": {
                                      "xg": null,
                                      "args": null,
                                      "ol": null,
                                      "la": null,
                                      "ca": "system:time_start"
                                    },
                                    "leftValue": {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "",
                                              "type": "Object",
                                              "name": "start",
                                              "default": null
                                            },
                                            {
                                              "description": "",
                                              "type": "Object",
                                              "name": "end",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                              "type": "String",
                                              "name": "timeZone",
                                              "default": null,
                                              "optional": true
                                            }
                                          ],
                                          "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                          "returns": "DateRange",
                                          "name": "DateRange",
                                          "isConstructor": true
                                        }
                                      },
                                      "args": {
                                        "start": "2024-01-01",
                                        "end": "2024-12-31"
                                      },
                                      "ol": null,
                                      "la": null
                                    }
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              ]
                            }
                          },
                          "ol": null
                        },
                        "filter": {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                  "type": "String",
                                  "name": "leftField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                  "type": "Object",
                                  "name": "rightValue",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                  "type": "String",
                                  "name": "rightField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                  "type": "Object",
                                  "name": "leftValue",
                                  "default": null,
                                  "optional": true
                                }
                              ],
                              "description": "Creates a unary or binary filter that passes if the left operand is less than the right operand.",
                              "returns": "Filter",
                              "name": "Filter.lessThan"
                            }
                          },
                          "args": {
                            "leftField": {
                              "xg": null,
                              "args": null,
                              "ol": null,
                              "la": null,
                              "ca": "CLOUDY_PIXEL_PERCENTAGE"
                            },
                            "rightValue": 10
                          },
                          "ol": null,
                          "la": null,
                          "na": [
                            {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                      "type": "String",
                                      "name": "leftField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                      "type": "Object",
                                      "name": "rightValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                      "type": "String",
                                      "name": "rightField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                      "type": "Object",
                                      "name": "leftValue",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a unary or binary filter that passes if the left operand is less than the right operand.",
                                  "returns": "Filter",
                                  "name": "Filter.lessThan"
                                }
                              },
                              "args": {
                                "leftField": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "ca": "CLOUDY_PIXEL_PERCENTAGE"
                                },
                                "rightValue": 10
                              },
                              "ol": null,
                              "la": null
                            }
                          ]
                        }
                      },
                      "ol": null
                    }
                  },
                  "ol": null,
                  "la": null
                },
                "geometry": {
                  "xg": {
                    "da": {
                      "args": [
                        {
                          "description": "The geometry being buffered.",
                          "type": "Geometry",
                          "name": "geometry",
                          "default": null
                        },
                        {
                          "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                          "type": "Float",
                          "name": "distance",
                          "default": null
                        },
                        {
                          "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                          "type": "ErrorMargin",
                          "name": "maxError",
                          "default": null,
                          "optional": true
                        },
                        {
                          "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                          "type": "Projection",
                          "name": "proj",
                          "default": null,
                          "optional": true
                        }
                      ],
                      "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                      "returns": "Geometry",
                      "name": "Geometry.buffer"
                    }
                  },
                  "args": {
                    "geometry": {
                      "xg": null,
                      "args": null,
                      "ol": null,
                      "la": null,
                      "rm": "Point",
                      "ja": [-45.4559, -22.4262],
                      "da": null
                    },
                    "distance": {
                      "xg": null,
                      "args": null,
                      "ol": null,
                      "la": null,
                      "ca": 5000
                    }
                  },
                  "ol": null,
                  "la": null
                }
              },
              "ol": null,
              "la": null
            },
            "falseCase": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The image to clip.",
                      "type": "Image",
                      "name": "input",
                      "default": null
                    },
                    {
                      "description": "The Geometry or Feature to clip to.",
                      "type": "Object",
                      "name": "geometry",
                      "default": null
                    }
                  ],
                  "description": "Clips an image to a Geometry or Feature (use clipToCollection to clip an image to a FeatureCollection). The output bands correspond exactly to the input bands, except data not covered by the geometry is masked. The output image retains the metadata of the input image.",
                  "returns": "Image",
                  "name": "Image.clip"
                }
              },
              "args": {
                "input": {
                  "xg": {
                    "da": {
                      "args": [
                        {
                          "description": "The image to mask with itself.",
                          "type": "Image",
                          "name": "image",
                          "default": null
                        }
                      ],
                      "description": "Updates an image's mask at all positions where the existing mask is not zero using the value of the image as the new mask value. The output image retains the metadata and footprint of the input image.",
                      "returns": "Image",
                      "name": "Image.selfMask"
                    }
                  },
                  "args": {
                    "image": {
                      "xg": {
                        "da": {
                          "args": [
                            {
                              "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                              "type": "Object",
                              "name": "value",
                              "default": null
                            }
                          ],
                          "description": "Generates an image containing a constant value everywhere.",
                          "returns": "Image",
                          "name": "Image.constant"
                        }
                      },
                      "args": {
                        "value": 0
                      },
                      "ol": null,
                      "la": null
                    }
                  },
                  "ol": null,
                  "la": null
                },
                "geometry": {
                  "xg": {
                    "da": {
                      "args": [
                        {
                          "description": "The geometry being buffered.",
                          "type": "Geometry",
                          "name": "geometry",
                          "default": null
                        },
                        {
                          "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                          "type": "Float",
                          "name": "distance",
                          "default": null
                        },
                        {
                          "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                          "type": "ErrorMargin",
                          "name": "maxError",
                          "default": null,
                          "optional": true
                        },
                        {
                          "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                          "type": "Projection",
                          "name": "proj",
                          "default": null,
                          "optional": true
                        }
                      ],
                      "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                      "returns": "Geometry",
                      "name": "Geometry.buffer"
                    }
                  },
                  "args": {
                    "geometry": {
                      "xg": null,
                      "args": null,
                      "ol": null,
                      "la": null,
                      "rm": "Point",
                      "ja": [-45.4559, -22.4262],
                      "da": null
                    },
                    "distance": {
                      "xg": null,
                      "args": null,
                      "ol": null,
                      "la": null,
                      "ca": 5000
                    }
                  },
                  "ol": null,
                  "la": null
                }
              },
              "ol": null,
              "la": null
            }
          },
          "ol": null,
          "la": null
        },
        "bandNames": {
          "xg": null,
          "args": null,
          "ol": null,
          "la": null,
          "ca": ["B8", "B4"]
        }
      },
      "ol": null,
      "la": null
    }
  },
  "temperatura_superficie_hr": {
    "mapid": "projects/infra-filament-408404/maps/a48345a03800a7957b6e11850c718f2d-6a3cf5c69a31b7e58208f77013459d8b",
    "token": "",
    "urlFormat": "https://earthengine.googleapis.com/v1/projects/infra-filament-408404/maps/a48345a03800a7957b6e11850c718f2d-6a3cf5c69a31b7e58208f77013459d8b/tiles/{z}/{x}/{y}",
    "image": {
      "xg": {
        "da": {
          "args": [
            {
              "description": "The image from which the left operand bands are taken.",
              "type": "Image",
              "name": "image1",
              "default": null
            },
            {
              "description": "The image from which the right operand bands are taken.",
              "type": "Image",
              "name": "image2",
              "default": null
            }
          ],
          "description": "Subtracts the second value from the first for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is the union of the input types.",
          "returns": "Image",
          "name": "Image.subtract"
        }
      },
      "args": {
        "image1": {
          "xg": {
            "da": {
              "args": [
                {
                  "description": "The image from which the left operand bands are taken.",
                  "type": "Image",
                  "name": "image1",
                  "default": null
                },
                {
                  "description": "The image from which the right operand bands are taken.",
                  "type": "Image",
                  "name": "image2",
                  "default": null
                }
              ],
              "description": "Adds the first value to the second for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is the union of the input types.",
              "returns": "Image",
              "name": "Image.add"
            }
          },
          "args": {
            "image1": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The image from which the left operand bands are taken.",
                      "type": "Image",
                      "name": "image1",
                      "default": null
                    },
                    {
                      "description": "The image from which the right operand bands are taken.",
                      "type": "Image",
                      "name": "image2",
                      "default": null
                    }
                  ],
                  "description": "Multiplies the first value by the second for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is the union of the input types.",
                  "returns": "Image",
                  "name": "Image.multiply"
                }
              },
              "args": {
                "image1": {
                  "xg": {
                    "da": {
                      "args": [
                        {
                          "description": "The image to select bands from.",
                          "type": "Image",
                          "name": "input",
                          "default": null
                        },
                        {
                          "description": "A list of names, regexes, or numeric indices specifying the bands to select.",
                          "type": "List",
                          "name": "bandSelectors",
                          "default": null
                        },
                        {
                          "description": "Optional new names for the output bands. Must match the number of bands selected.",
                          "type": "List",
                          "name": "newNames",
                          "default": null,
                          "optional": true
                        }
                      ],
                      "description": "Selects bands from an image by name, RE2-compatible regex, or index and optionally renames them.",
                      "returns": "Image",
                      "name": "Image.select"
                    }
                  },
                  "args": {
                    "input": {
                      "xg": {
                        "da": {
                          "args": [
                            {
                              "description": "The condition that determines which result is returned. If this is not a boolean, it is interpreted as a boolean by the following rules:\n<ul>  <li>Numbers that are equal to 0 or a NaN are false.</li>  <li>Empty strings, lists and dictionaries are false.</li>  <li>Null is false.</li>  <li>Everything else is true.</li></ul>",
                              "type": "Object",
                              "name": "condition",
                              "default": null,
                              "optional": true
                            },
                            {
                              "description": "The result to return if the condition is true.",
                              "type": "Object",
                              "name": "trueCase",
                              "default": null,
                              "optional": true
                            },
                            {
                              "description": "The result to return if the condition is false.",
                              "type": "Object",
                              "name": "falseCase",
                              "default": null,
                              "optional": true
                            }
                          ],
                          "description": "Selects one of its inputs based on a condition, similar to an if-then-else construct.",
                          "returns": "Object",
                          "name": "If"
                        }
                      },
                      "args": {
                        "condition": {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "The left-hand value.",
                                  "type": "Number",
                                  "name": "left",
                                  "default": null
                                },
                                {
                                  "description": "The right-hand value.",
                                  "type": "Number",
                                  "name": "right",
                                  "default": null
                                }
                              ],
                              "description": "Returns 1 if and only if the first value is greater than the second.",
                              "returns": "Number",
                              "name": "Number.gt"
                            }
                          },
                          "args": {
                            "left": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "The collection to count.",
                                      "type": "FeatureCollection",
                                      "name": "collection",
                                      "default": null
                                    }
                                  ],
                                  "description": "Returns the number of elements in the collection.",
                                  "returns": "Integer",
                                  "name": "Collection.size"
                                }
                              },
                              "args": {
                                "collection": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "The collection of the elements to which the algorithm is applied.",
                                          "type": "FeatureCollection",
                                          "name": "collection",
                                          "default": null
                                        },
                                        {
                                          "description": "The algorithm being applied to each element.",
                                          "type": "Algorithm",
                                          "name": "baseAlgorithm",
                                          "default": null
                                        },
                                        {
                                          "description": "If true, the mapped algorithm is allowed to return nulls, and the elements for which it returns nulls will be dropped.",
                                          "type": "Boolean",
                                          "name": "dropNulls",
                                          "default": false,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Maps an algorithm over a collection.",
                                      "returns": "FeatureCollection",
                                      "name": "Collection.map"
                                    }
                                  },
                                  "args": {
                                    "collection": {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "The collection to filter.",
                                              "type": "FeatureCollection",
                                              "name": "collection",
                                              "default": null
                                            },
                                            {
                                              "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                              "type": "Object",
                                              "name": "filter",
                                              "default": null
                                            }
                                          ],
                                          "description": "Applies a filter to a given collection.",
                                          "returns": "FeatureCollection",
                                          "name": "Collection.filter"
                                        }
                                      },
                                      "args": {
                                        "collection": {
                                          "xg": {
                                            "da": {
                                              "args": [
                                                {
                                                  "description": "The collection to filter.",
                                                  "type": "FeatureCollection",
                                                  "name": "collection",
                                                  "default": null
                                                },
                                                {
                                                  "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                                  "type": "Object",
                                                  "name": "filter",
                                                  "default": null
                                                }
                                              ],
                                              "description": "Applies a filter to a given collection.",
                                              "returns": "FeatureCollection",
                                              "name": "Collection.filter"
                                            }
                                          },
                                          "args": {
                                            "collection": {
                                              "xg": {
                                                "da": {
                                                  "args": [
                                                    {
                                                      "description": "The asset ID of the image collection.",
                                                      "type": "String",
                                                      "name": "id",
                                                      "default": null
                                                    },
                                                    {
                                                      "description": "The version of the asset. -1 signifies the latest version.",
                                                      "type": "Long",
                                                      "name": "version",
                                                      "default": null,
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Returns the image collection given its ID.",
                                                  "returns": "ImageCollection",
                                                  "name": "ImageCollection.load"
                                                }
                                              },
                                              "args": {
                                                "id": "LANDSAT/LC08/C02/T1_L2"
                                              },
                                              "ol": null,
                                              "la": null
                                            },
                                            "filter": {
                                              "xg": {
                                                "da": {
                                                  "args": [
                                                    {
                                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                      "type": "String",
                                                      "name": "leftField",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                      "type": "Object",
                                                      "name": "rightValue",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                      "type": "String",
                                                      "name": "rightField",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                      "type": "Object",
                                                      "name": "leftValue",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The maximum reprojection error allowed during filter application.",
                                                      "type": "ErrorMargin",
                                                      "name": "maxError",
                                                      "default": {
                                                        "type": "ErrorMargin",
                                                        "unit": "meters",
                                                        "value": 0.1
                                                      },
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                                  "returns": "Filter",
                                                  "name": "Filter.intersects"
                                                }
                                              },
                                              "args": {
                                                "leftField": {
                                                  "xg": null,
                                                  "args": null,
                                                  "ol": null,
                                                  "la": null,
                                                  "ca": ".all"
                                                },
                                                "rightValue": {
                                                  "xg": {
                                                    "da": {
                                                      "args": [
                                                        {
                                                          "description": "The geometry of the feature.",
                                                          "type": "Geometry",
                                                          "name": "geometry",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "The properties of the feature.",
                                                          "type": "Dictionary",
                                                          "name": "metadata",
                                                          "default": {},
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "Obsolete; has no effect.",
                                                          "type": "String",
                                                          "name": "geometryKey",
                                                          "default": null,
                                                          "optional": true
                                                        }
                                                      ],
                                                      "description": "Returns a Feature composed of the given geometry and metadata.",
                                                      "returns": "Feature",
                                                      "name": "Feature"
                                                    }
                                                  },
                                                  "args": {
                                                    "geometry": {
                                                      "xg": {
                                                        "da": {
                                                          "args": [
                                                            {
                                                              "description": "The geometry being buffered.",
                                                              "type": "Geometry",
                                                              "name": "geometry",
                                                              "default": null
                                                            },
                                                            {
                                                              "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                                              "type": "Float",
                                                              "name": "distance",
                                                              "default": null
                                                            },
                                                            {
                                                              "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                                              "type": "ErrorMargin",
                                                              "name": "maxError",
                                                              "default": null,
                                                              "optional": true
                                                            },
                                                            {
                                                              "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                                              "type": "Projection",
                                                              "name": "proj",
                                                              "default": null,
                                                              "optional": true
                                                            }
                                                          ],
                                                          "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                                          "returns": "Geometry",
                                                          "name": "Geometry.buffer"
                                                        }
                                                      },
                                                      "args": {
                                                        "geometry": {
                                                          "xg": null,
                                                          "args": null,
                                                          "ol": null,
                                                          "la": null,
                                                          "rm": "Point",
                                                          "ja": [
                                                            -45.4559, -22.4262
                                                          ],
                                                          "da": null
                                                        },
                                                        "distance": {
                                                          "xg": null,
                                                          "args": null,
                                                          "ol": null,
                                                          "la": null,
                                                          "ca": 5000
                                                        }
                                                      },
                                                      "ol": null,
                                                      "la": null
                                                    }
                                                  },
                                                  "ol": null,
                                                  "la": null
                                                }
                                              },
                                              "ol": null,
                                              "la": null,
                                              "na": [
                                                {
                                                  "xg": {
                                                    "da": {
                                                      "args": [
                                                        {
                                                          "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                          "type": "String",
                                                          "name": "leftField",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                          "type": "Object",
                                                          "name": "rightValue",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                          "type": "String",
                                                          "name": "rightField",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                          "type": "Object",
                                                          "name": "leftValue",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "The maximum reprojection error allowed during filter application.",
                                                          "type": "ErrorMargin",
                                                          "name": "maxError",
                                                          "default": {
                                                            "type": "ErrorMargin",
                                                            "unit": "meters",
                                                            "value": 0.1
                                                          },
                                                          "optional": true
                                                        }
                                                      ],
                                                      "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                                      "returns": "Filter",
                                                      "name": "Filter.intersects"
                                                    }
                                                  },
                                                  "args": {
                                                    "leftField": {
                                                      "xg": null,
                                                      "args": null,
                                                      "ol": null,
                                                      "la": null,
                                                      "ca": ".all"
                                                    },
                                                    "rightValue": {
                                                      "xg": {
                                                        "da": {
                                                          "args": [
                                                            {
                                                              "description": "The geometry of the feature.",
                                                              "type": "Geometry",
                                                              "name": "geometry",
                                                              "default": null,
                                                              "optional": true
                                                            },
                                                            {
                                                              "description": "The properties of the feature.",
                                                              "type": "Dictionary",
                                                              "name": "metadata",
                                                              "default": {},
                                                              "optional": true
                                                            },
                                                            {
                                                              "description": "Obsolete; has no effect.",
                                                              "type": "String",
                                                              "name": "geometryKey",
                                                              "default": null,
                                                              "optional": true
                                                            }
                                                          ],
                                                          "description": "Returns a Feature composed of the given geometry and metadata.",
                                                          "returns": "Feature",
                                                          "name": "Feature"
                                                        }
                                                      },
                                                      "args": {
                                                        "geometry": {
                                                          "xg": {
                                                            "da": {
                                                              "args": [
                                                                {
                                                                  "description": "The geometry being buffered.",
                                                                  "type": "Geometry",
                                                                  "name": "geometry",
                                                                  "default": null
                                                                },
                                                                {
                                                                  "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                                                  "type": "Float",
                                                                  "name": "distance",
                                                                  "default": null
                                                                },
                                                                {
                                                                  "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                                                  "type": "ErrorMargin",
                                                                  "name": "maxError",
                                                                  "default": null,
                                                                  "optional": true
                                                                },
                                                                {
                                                                  "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                                                  "type": "Projection",
                                                                  "name": "proj",
                                                                  "default": null,
                                                                  "optional": true
                                                                }
                                                              ],
                                                              "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                                              "returns": "Geometry",
                                                              "name": "Geometry.buffer"
                                                            }
                                                          },
                                                          "args": {
                                                            "geometry": {
                                                              "xg": null,
                                                              "args": null,
                                                              "ol": null,
                                                              "la": null,
                                                              "rm": "Point",
                                                              "ja": [
                                                                -45.4559,
                                                                -22.4262
                                                              ],
                                                              "da": null
                                                            },
                                                            "distance": {
                                                              "xg": null,
                                                              "args": null,
                                                              "ol": null,
                                                              "la": null,
                                                              "ca": 5000
                                                            }
                                                          },
                                                          "ol": null,
                                                          "la": null
                                                        }
                                                      },
                                                      "ol": null,
                                                      "la": null
                                                    }
                                                  },
                                                  "ol": null,
                                                  "la": null
                                                }
                                              ]
                                            }
                                          },
                                          "ol": null
                                        },
                                        "filter": {
                                          "xg": {
                                            "da": {
                                              "args": [
                                                {
                                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                  "type": "String",
                                                  "name": "leftField",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                  "type": "Object",
                                                  "name": "rightValue",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                  "type": "String",
                                                  "name": "rightField",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                  "type": "Object",
                                                  "name": "leftValue",
                                                  "default": null,
                                                  "optional": true
                                                }
                                              ],
                                              "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                                              "returns": "Filter",
                                              "name": "Filter.dateRangeContains"
                                            }
                                          },
                                          "args": {
                                            "rightField": {
                                              "xg": null,
                                              "args": null,
                                              "ol": null,
                                              "la": null,
                                              "ca": "system:time_start"
                                            },
                                            "leftValue": {
                                              "xg": {
                                                "da": {
                                                  "args": [
                                                    {
                                                      "description": "",
                                                      "type": "Object",
                                                      "name": "start",
                                                      "default": null
                                                    },
                                                    {
                                                      "description": "",
                                                      "type": "Object",
                                                      "name": "end",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                                      "type": "String",
                                                      "name": "timeZone",
                                                      "default": null,
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                                  "returns": "DateRange",
                                                  "name": "DateRange",
                                                  "isConstructor": true
                                                }
                                              },
                                              "args": {
                                                "start": "2024-01-01",
                                                "end": "2024-03-31"
                                              },
                                              "ol": null,
                                              "la": null
                                            }
                                          },
                                          "ol": null,
                                          "la": null,
                                          "na": [
                                            {
                                              "xg": {
                                                "da": {
                                                  "args": [
                                                    {
                                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                      "type": "String",
                                                      "name": "leftField",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                      "type": "Object",
                                                      "name": "rightValue",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                      "type": "String",
                                                      "name": "rightField",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                      "type": "Object",
                                                      "name": "leftValue",
                                                      "default": null,
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                                                  "returns": "Filter",
                                                  "name": "Filter.dateRangeContains"
                                                }
                                              },
                                              "args": {
                                                "rightField": {
                                                  "xg": null,
                                                  "args": null,
                                                  "ol": null,
                                                  "la": null,
                                                  "ca": "system:time_start"
                                                },
                                                "leftValue": {
                                                  "xg": {
                                                    "da": {
                                                      "args": [
                                                        {
                                                          "description": "",
                                                          "type": "Object",
                                                          "name": "start",
                                                          "default": null
                                                        },
                                                        {
                                                          "description": "",
                                                          "type": "Object",
                                                          "name": "end",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                                          "type": "String",
                                                          "name": "timeZone",
                                                          "default": null,
                                                          "optional": true
                                                        }
                                                      ],
                                                      "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                                      "returns": "DateRange",
                                                      "name": "DateRange",
                                                      "isConstructor": true
                                                    }
                                                  },
                                                  "args": {
                                                    "start": "2024-01-01",
                                                    "end": "2024-03-31"
                                                  },
                                                  "ol": null,
                                                  "la": null
                                                }
                                              },
                                              "ol": null,
                                              "la": null
                                            }
                                          ]
                                        }
                                      },
                                      "ol": null
                                    },
                                    "baseAlgorithm": {
                                      "da": {
                                        "name": "",
                                        "returns": "Object",
                                        "args": [
                                          {
                                            "name": "_MAPPING_VAR_0_0",
                                            "type": "Object"
                                          }
                                        ]
                                      },
                                      "ja": {
                                        "xg": {
                                          "da": {
                                            "args": [
                                              {
                                                "description": "Input image.",
                                                "type": "Image",
                                                "name": "image",
                                                "default": null
                                              },
                                              {
                                                "description": "New mask for the image, as a floating-point value in the range [0, 1] (invalid = 0, valid = 1). If this image has a single band, it is used for all bands in the input image; otherwise, must have the same number of bands as the input image.",
                                                "type": "Image",
                                                "name": "mask",
                                                "default": null
                                              }
                                            ],
                                            "description": "Updates an image's mask at all positions where the existing mask is not zero. The output image retains the metadata and footprint of the input image.",
                                            "returns": "Image",
                                            "name": "Image.updateMask"
                                          }
                                        },
                                        "args": {
                                          "image": {
                                            "xg": null,
                                            "args": null,
                                            "ol": "_MAPPING_VAR_0_0",
                                            "la": null
                                          },
                                          "mask": {
                                            "xg": {
                                              "da": {
                                                "args": [
                                                  {
                                                    "description": "The image to which the operation is applied.",
                                                    "type": "Image",
                                                    "name": "value",
                                                    "default": null
                                                  }
                                                ],
                                                "description": "Returns 0 if the input is non-zero, and 1 otherwise.",
                                                "returns": "Image",
                                                "name": "Image.not"
                                              }
                                            },
                                            "args": {
                                              "value": {
                                                "xg": {
                                                  "da": {
                                                    "args": [
                                                      {
                                                        "description": "The image from which the left operand bands are taken.",
                                                        "type": "Image",
                                                        "name": "image1",
                                                        "default": null
                                                      },
                                                      {
                                                        "description": "The image from which the right operand bands are taken.",
                                                        "type": "Image",
                                                        "name": "image2",
                                                        "default": null
                                                      }
                                                    ],
                                                    "description": "Returns 1 if and only if either input value is non-zero for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is boolean.",
                                                    "returns": "Image",
                                                    "name": "Image.or"
                                                  }
                                                },
                                                "args": {
                                                  "image1": {
                                                    "xg": {
                                                      "da": {
                                                        "args": [
                                                          {
                                                            "description": "The image from which the left operand bands are taken.",
                                                            "type": "Image",
                                                            "name": "image1",
                                                            "default": null
                                                          },
                                                          {
                                                            "description": "The image from which the right operand bands are taken.",
                                                            "type": "Image",
                                                            "name": "image2",
                                                            "default": null
                                                          }
                                                        ],
                                                        "description": "Calculates the bitwise AND of the input values for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is the union of the input types.",
                                                        "returns": "Image",
                                                        "name": "Image.bitwiseAnd"
                                                      }
                                                    },
                                                    "args": {
                                                      "image1": {
                                                        "xg": {
                                                          "da": {
                                                            "args": [
                                                              {
                                                                "description": "The image to select bands from.",
                                                                "type": "Image",
                                                                "name": "input",
                                                                "default": null
                                                              },
                                                              {
                                                                "description": "A list of names, regexes, or numeric indices specifying the bands to select.",
                                                                "type": "List",
                                                                "name": "bandSelectors",
                                                                "default": null
                                                              },
                                                              {
                                                                "description": "Optional new names for the output bands. Must match the number of bands selected.",
                                                                "type": "List",
                                                                "name": "newNames",
                                                                "default": null,
                                                                "optional": true
                                                              }
                                                            ],
                                                            "description": "Selects bands from an image by name, RE2-compatible regex, or index and optionally renames them.",
                                                            "returns": "Image",
                                                            "name": "Image.select"
                                                          }
                                                        },
                                                        "args": {
                                                          "input": {
                                                            "xg": null,
                                                            "args": null,
                                                            "ol": "_MAPPING_VAR_0_0",
                                                            "la": null
                                                          },
                                                          "bandSelectors": {
                                                            "xg": null,
                                                            "args": null,
                                                            "ol": null,
                                                            "la": null,
                                                            "ca": ["QA_PIXEL"]
                                                          }
                                                        },
                                                        "ol": null,
                                                        "la": null
                                                      },
                                                      "image2": {
                                                        "xg": {
                                                          "da": {
                                                            "args": [
                                                              {
                                                                "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                                                                "type": "Object",
                                                                "name": "value",
                                                                "default": null
                                                              }
                                                            ],
                                                            "description": "Generates an image containing a constant value everywhere.",
                                                            "returns": "Image",
                                                            "name": "Image.constant"
                                                          }
                                                        },
                                                        "args": {
                                                          "value": 8
                                                        },
                                                        "ol": null,
                                                        "la": null
                                                      }
                                                    },
                                                    "ol": null,
                                                    "la": null
                                                  },
                                                  "image2": {
                                                    "xg": {
                                                      "da": {
                                                        "args": [
                                                          {
                                                            "description": "The image from which the left operand bands are taken.",
                                                            "type": "Image",
                                                            "name": "image1",
                                                            "default": null
                                                          },
                                                          {
                                                            "description": "The image from which the right operand bands are taken.",
                                                            "type": "Image",
                                                            "name": "image2",
                                                            "default": null
                                                          }
                                                        ],
                                                        "description": "Calculates the bitwise AND of the input values for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is the union of the input types.",
                                                        "returns": "Image",
                                                        "name": "Image.bitwiseAnd"
                                                      }
                                                    },
                                                    "args": {
                                                      "image1": {
                                                        "xg": {
                                                          "da": {
                                                            "args": [
                                                              {
                                                                "description": "The image to select bands from.",
                                                                "type": "Image",
                                                                "name": "input",
                                                                "default": null
                                                              },
                                                              {
                                                                "description": "A list of names, regexes, or numeric indices specifying the bands to select.",
                                                                "type": "List",
                                                                "name": "bandSelectors",
                                                                "default": null
                                                              },
                                                              {
                                                                "description": "Optional new names for the output bands. Must match the number of bands selected.",
                                                                "type": "List",
                                                                "name": "newNames",
                                                                "default": null,
                                                                "optional": true
                                                              }
                                                            ],
                                                            "description": "Selects bands from an image by name, RE2-compatible regex, or index and optionally renames them.",
                                                            "returns": "Image",
                                                            "name": "Image.select"
                                                          }
                                                        },
                                                        "args": {
                                                          "input": {
                                                            "xg": null,
                                                            "args": null,
                                                            "ol": "_MAPPING_VAR_0_0",
                                                            "la": null
                                                          },
                                                          "bandSelectors": {
                                                            "xg": null,
                                                            "args": null,
                                                            "ol": null,
                                                            "la": null,
                                                            "ca": ["QA_PIXEL"]
                                                          }
                                                        },
                                                        "ol": null,
                                                        "la": null
                                                      },
                                                      "image2": {
                                                        "xg": {
                                                          "da": {
                                                            "args": [
                                                              {
                                                                "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                                                                "type": "Object",
                                                                "name": "value",
                                                                "default": null
                                                              }
                                                            ],
                                                            "description": "Generates an image containing a constant value everywhere.",
                                                            "returns": "Image",
                                                            "name": "Image.constant"
                                                          }
                                                        },
                                                        "args": {
                                                          "value": 16
                                                        },
                                                        "ol": null,
                                                        "la": null
                                                      }
                                                    },
                                                    "ol": null,
                                                    "la": null
                                                  }
                                                },
                                                "ol": null,
                                                "la": null
                                              }
                                            },
                                            "ol": null,
                                            "la": null
                                          }
                                        },
                                        "ol": null,
                                        "la": null
                                      }
                                    }
                                  },
                                  "ol": null
                                }
                              },
                              "ol": null,
                              "la": null,
                              "ca": null
                            },
                            "right": {
                              "xg": null,
                              "args": null,
                              "ol": null,
                              "la": null,
                              "ca": 0
                            }
                          },
                          "ol": null,
                          "la": null,
                          "ca": null
                        },
                        "trueCase": {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "The image to clip.",
                                  "type": "Image",
                                  "name": "input",
                                  "default": null
                                },
                                {
                                  "description": "The Geometry or Feature to clip to.",
                                  "type": "Object",
                                  "name": "geometry",
                                  "default": null
                                }
                              ],
                              "description": "Clips an image to a Geometry or Feature (use clipToCollection to clip an image to a FeatureCollection). The output bands correspond exactly to the input bands, except data not covered by the geometry is masked. The output image retains the metadata of the input image.",
                              "returns": "Image",
                              "name": "Image.clip"
                            }
                          },
                          "args": {
                            "input": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "The image collection to reduce.",
                                      "type": "ImageCollection",
                                      "name": "collection",
                                      "default": null
                                    }
                                  ],
                                  "description": "Reduces an image collection by calculating the median of all values at each pixel across the stack of all matching bands. Bands are matched by name.",
                                  "returns": "Image",
                                  "name": "reduce.median"
                                }
                              },
                              "args": {
                                "collection": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "The collection of the elements to which the algorithm is applied.",
                                          "type": "FeatureCollection",
                                          "name": "collection",
                                          "default": null
                                        },
                                        {
                                          "description": "The algorithm being applied to each element.",
                                          "type": "Algorithm",
                                          "name": "baseAlgorithm",
                                          "default": null
                                        },
                                        {
                                          "description": "If true, the mapped algorithm is allowed to return nulls, and the elements for which it returns nulls will be dropped.",
                                          "type": "Boolean",
                                          "name": "dropNulls",
                                          "default": false,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Maps an algorithm over a collection.",
                                      "returns": "FeatureCollection",
                                      "name": "Collection.map"
                                    }
                                  },
                                  "args": {
                                    "collection": {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "The collection to filter.",
                                              "type": "FeatureCollection",
                                              "name": "collection",
                                              "default": null
                                            },
                                            {
                                              "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                              "type": "Object",
                                              "name": "filter",
                                              "default": null
                                            }
                                          ],
                                          "description": "Applies a filter to a given collection.",
                                          "returns": "FeatureCollection",
                                          "name": "Collection.filter"
                                        }
                                      },
                                      "args": {
                                        "collection": {
                                          "xg": {
                                            "da": {
                                              "args": [
                                                {
                                                  "description": "The collection to filter.",
                                                  "type": "FeatureCollection",
                                                  "name": "collection",
                                                  "default": null
                                                },
                                                {
                                                  "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                                  "type": "Object",
                                                  "name": "filter",
                                                  "default": null
                                                }
                                              ],
                                              "description": "Applies a filter to a given collection.",
                                              "returns": "FeatureCollection",
                                              "name": "Collection.filter"
                                            }
                                          },
                                          "args": {
                                            "collection": {
                                              "xg": {
                                                "da": {
                                                  "args": [
                                                    {
                                                      "description": "The asset ID of the image collection.",
                                                      "type": "String",
                                                      "name": "id",
                                                      "default": null
                                                    },
                                                    {
                                                      "description": "The version of the asset. -1 signifies the latest version.",
                                                      "type": "Long",
                                                      "name": "version",
                                                      "default": null,
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Returns the image collection given its ID.",
                                                  "returns": "ImageCollection",
                                                  "name": "ImageCollection.load"
                                                }
                                              },
                                              "args": {
                                                "id": "LANDSAT/LC08/C02/T1_L2"
                                              },
                                              "ol": null,
                                              "la": null
                                            },
                                            "filter": {
                                              "xg": {
                                                "da": {
                                                  "args": [
                                                    {
                                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                      "type": "String",
                                                      "name": "leftField",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                      "type": "Object",
                                                      "name": "rightValue",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                      "type": "String",
                                                      "name": "rightField",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                      "type": "Object",
                                                      "name": "leftValue",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The maximum reprojection error allowed during filter application.",
                                                      "type": "ErrorMargin",
                                                      "name": "maxError",
                                                      "default": {
                                                        "type": "ErrorMargin",
                                                        "unit": "meters",
                                                        "value": 0.1
                                                      },
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                                  "returns": "Filter",
                                                  "name": "Filter.intersects"
                                                }
                                              },
                                              "args": {
                                                "leftField": {
                                                  "xg": null,
                                                  "args": null,
                                                  "ol": null,
                                                  "la": null,
                                                  "ca": ".all"
                                                },
                                                "rightValue": {
                                                  "xg": {
                                                    "da": {
                                                      "args": [
                                                        {
                                                          "description": "The geometry of the feature.",
                                                          "type": "Geometry",
                                                          "name": "geometry",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "The properties of the feature.",
                                                          "type": "Dictionary",
                                                          "name": "metadata",
                                                          "default": {},
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "Obsolete; has no effect.",
                                                          "type": "String",
                                                          "name": "geometryKey",
                                                          "default": null,
                                                          "optional": true
                                                        }
                                                      ],
                                                      "description": "Returns a Feature composed of the given geometry and metadata.",
                                                      "returns": "Feature",
                                                      "name": "Feature"
                                                    }
                                                  },
                                                  "args": {
                                                    "geometry": {
                                                      "xg": {
                                                        "da": {
                                                          "args": [
                                                            {
                                                              "description": "The geometry being buffered.",
                                                              "type": "Geometry",
                                                              "name": "geometry",
                                                              "default": null
                                                            },
                                                            {
                                                              "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                                              "type": "Float",
                                                              "name": "distance",
                                                              "default": null
                                                            },
                                                            {
                                                              "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                                              "type": "ErrorMargin",
                                                              "name": "maxError",
                                                              "default": null,
                                                              "optional": true
                                                            },
                                                            {
                                                              "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                                              "type": "Projection",
                                                              "name": "proj",
                                                              "default": null,
                                                              "optional": true
                                                            }
                                                          ],
                                                          "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                                          "returns": "Geometry",
                                                          "name": "Geometry.buffer"
                                                        }
                                                      },
                                                      "args": {
                                                        "geometry": {
                                                          "xg": null,
                                                          "args": null,
                                                          "ol": null,
                                                          "la": null,
                                                          "rm": "Point",
                                                          "ja": [
                                                            -45.4559, -22.4262
                                                          ],
                                                          "da": null
                                                        },
                                                        "distance": {
                                                          "xg": null,
                                                          "args": null,
                                                          "ol": null,
                                                          "la": null,
                                                          "ca": 5000
                                                        }
                                                      },
                                                      "ol": null,
                                                      "la": null
                                                    }
                                                  },
                                                  "ol": null,
                                                  "la": null
                                                }
                                              },
                                              "ol": null,
                                              "la": null,
                                              "na": [
                                                {
                                                  "xg": {
                                                    "da": {
                                                      "args": [
                                                        {
                                                          "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                          "type": "String",
                                                          "name": "leftField",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                          "type": "Object",
                                                          "name": "rightValue",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                          "type": "String",
                                                          "name": "rightField",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                          "type": "Object",
                                                          "name": "leftValue",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "The maximum reprojection error allowed during filter application.",
                                                          "type": "ErrorMargin",
                                                          "name": "maxError",
                                                          "default": {
                                                            "type": "ErrorMargin",
                                                            "unit": "meters",
                                                            "value": 0.1
                                                          },
                                                          "optional": true
                                                        }
                                                      ],
                                                      "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                                      "returns": "Filter",
                                                      "name": "Filter.intersects"
                                                    }
                                                  },
                                                  "args": {
                                                    "leftField": {
                                                      "xg": null,
                                                      "args": null,
                                                      "ol": null,
                                                      "la": null,
                                                      "ca": ".all"
                                                    },
                                                    "rightValue": {
                                                      "xg": {
                                                        "da": {
                                                          "args": [
                                                            {
                                                              "description": "The geometry of the feature.",
                                                              "type": "Geometry",
                                                              "name": "geometry",
                                                              "default": null,
                                                              "optional": true
                                                            },
                                                            {
                                                              "description": "The properties of the feature.",
                                                              "type": "Dictionary",
                                                              "name": "metadata",
                                                              "default": {},
                                                              "optional": true
                                                            },
                                                            {
                                                              "description": "Obsolete; has no effect.",
                                                              "type": "String",
                                                              "name": "geometryKey",
                                                              "default": null,
                                                              "optional": true
                                                            }
                                                          ],
                                                          "description": "Returns a Feature composed of the given geometry and metadata.",
                                                          "returns": "Feature",
                                                          "name": "Feature"
                                                        }
                                                      },
                                                      "args": {
                                                        "geometry": {
                                                          "xg": {
                                                            "da": {
                                                              "args": [
                                                                {
                                                                  "description": "The geometry being buffered.",
                                                                  "type": "Geometry",
                                                                  "name": "geometry",
                                                                  "default": null
                                                                },
                                                                {
                                                                  "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                                                  "type": "Float",
                                                                  "name": "distance",
                                                                  "default": null
                                                                },
                                                                {
                                                                  "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                                                  "type": "ErrorMargin",
                                                                  "name": "maxError",
                                                                  "default": null,
                                                                  "optional": true
                                                                },
                                                                {
                                                                  "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                                                  "type": "Projection",
                                                                  "name": "proj",
                                                                  "default": null,
                                                                  "optional": true
                                                                }
                                                              ],
                                                              "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                                              "returns": "Geometry",
                                                              "name": "Geometry.buffer"
                                                            }
                                                          },
                                                          "args": {
                                                            "geometry": {
                                                              "xg": null,
                                                              "args": null,
                                                              "ol": null,
                                                              "la": null,
                                                              "rm": "Point",
                                                              "ja": [
                                                                -45.4559,
                                                                -22.4262
                                                              ],
                                                              "da": null
                                                            },
                                                            "distance": {
                                                              "xg": null,
                                                              "args": null,
                                                              "ol": null,
                                                              "la": null,
                                                              "ca": 5000
                                                            }
                                                          },
                                                          "ol": null,
                                                          "la": null
                                                        }
                                                      },
                                                      "ol": null,
                                                      "la": null
                                                    }
                                                  },
                                                  "ol": null,
                                                  "la": null
                                                }
                                              ]
                                            }
                                          },
                                          "ol": null
                                        },
                                        "filter": {
                                          "xg": {
                                            "da": {
                                              "args": [
                                                {
                                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                  "type": "String",
                                                  "name": "leftField",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                  "type": "Object",
                                                  "name": "rightValue",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                  "type": "String",
                                                  "name": "rightField",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                  "type": "Object",
                                                  "name": "leftValue",
                                                  "default": null,
                                                  "optional": true
                                                }
                                              ],
                                              "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                                              "returns": "Filter",
                                              "name": "Filter.dateRangeContains"
                                            }
                                          },
                                          "args": {
                                            "rightField": {
                                              "xg": null,
                                              "args": null,
                                              "ol": null,
                                              "la": null,
                                              "ca": "system:time_start"
                                            },
                                            "leftValue": {
                                              "xg": {
                                                "da": {
                                                  "args": [
                                                    {
                                                      "description": "",
                                                      "type": "Object",
                                                      "name": "start",
                                                      "default": null
                                                    },
                                                    {
                                                      "description": "",
                                                      "type": "Object",
                                                      "name": "end",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                                      "type": "String",
                                                      "name": "timeZone",
                                                      "default": null,
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                                  "returns": "DateRange",
                                                  "name": "DateRange",
                                                  "isConstructor": true
                                                }
                                              },
                                              "args": {
                                                "start": "2024-01-01",
                                                "end": "2024-03-31"
                                              },
                                              "ol": null,
                                              "la": null
                                            }
                                          },
                                          "ol": null,
                                          "la": null,
                                          "na": [
                                            {
                                              "xg": {
                                                "da": {
                                                  "args": [
                                                    {
                                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                      "type": "String",
                                                      "name": "leftField",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                      "type": "Object",
                                                      "name": "rightValue",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                      "type": "String",
                                                      "name": "rightField",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                      "type": "Object",
                                                      "name": "leftValue",
                                                      "default": null,
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                                                  "returns": "Filter",
                                                  "name": "Filter.dateRangeContains"
                                                }
                                              },
                                              "args": {
                                                "rightField": {
                                                  "xg": null,
                                                  "args": null,
                                                  "ol": null,
                                                  "la": null,
                                                  "ca": "system:time_start"
                                                },
                                                "leftValue": {
                                                  "xg": {
                                                    "da": {
                                                      "args": [
                                                        {
                                                          "description": "",
                                                          "type": "Object",
                                                          "name": "start",
                                                          "default": null
                                                        },
                                                        {
                                                          "description": "",
                                                          "type": "Object",
                                                          "name": "end",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                                          "type": "String",
                                                          "name": "timeZone",
                                                          "default": null,
                                                          "optional": true
                                                        }
                                                      ],
                                                      "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                                      "returns": "DateRange",
                                                      "name": "DateRange",
                                                      "isConstructor": true
                                                    }
                                                  },
                                                  "args": {
                                                    "start": "2024-01-01",
                                                    "end": "2024-03-31"
                                                  },
                                                  "ol": null,
                                                  "la": null
                                                }
                                              },
                                              "ol": null,
                                              "la": null
                                            }
                                          ]
                                        }
                                      },
                                      "ol": null
                                    },
                                    "baseAlgorithm": {
                                      "da": {
                                        "name": "",
                                        "returns": "Object",
                                        "args": [
                                          {
                                            "name": "_MAPPING_VAR_0_0",
                                            "type": "Object"
                                          }
                                        ]
                                      },
                                      "ja": {
                                        "xg": {
                                          "da": {
                                            "args": [
                                              {
                                                "description": "Input image.",
                                                "type": "Image",
                                                "name": "image",
                                                "default": null
                                              },
                                              {
                                                "description": "New mask for the image, as a floating-point value in the range [0, 1] (invalid = 0, valid = 1). If this image has a single band, it is used for all bands in the input image; otherwise, must have the same number of bands as the input image.",
                                                "type": "Image",
                                                "name": "mask",
                                                "default": null
                                              }
                                            ],
                                            "description": "Updates an image's mask at all positions where the existing mask is not zero. The output image retains the metadata and footprint of the input image.",
                                            "returns": "Image",
                                            "name": "Image.updateMask"
                                          }
                                        },
                                        "args": {
                                          "image": {
                                            "xg": null,
                                            "args": null,
                                            "ol": "_MAPPING_VAR_0_0",
                                            "la": null
                                          },
                                          "mask": {
                                            "xg": {
                                              "da": {
                                                "args": [
                                                  {
                                                    "description": "The image to which the operation is applied.",
                                                    "type": "Image",
                                                    "name": "value",
                                                    "default": null
                                                  }
                                                ],
                                                "description": "Returns 0 if the input is non-zero, and 1 otherwise.",
                                                "returns": "Image",
                                                "name": "Image.not"
                                              }
                                            },
                                            "args": {
                                              "value": {
                                                "xg": {
                                                  "da": {
                                                    "args": [
                                                      {
                                                        "description": "The image from which the left operand bands are taken.",
                                                        "type": "Image",
                                                        "name": "image1",
                                                        "default": null
                                                      },
                                                      {
                                                        "description": "The image from which the right operand bands are taken.",
                                                        "type": "Image",
                                                        "name": "image2",
                                                        "default": null
                                                      }
                                                    ],
                                                    "description": "Returns 1 if and only if either input value is non-zero for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is boolean.",
                                                    "returns": "Image",
                                                    "name": "Image.or"
                                                  }
                                                },
                                                "args": {
                                                  "image1": {
                                                    "xg": {
                                                      "da": {
                                                        "args": [
                                                          {
                                                            "description": "The image from which the left operand bands are taken.",
                                                            "type": "Image",
                                                            "name": "image1",
                                                            "default": null
                                                          },
                                                          {
                                                            "description": "The image from which the right operand bands are taken.",
                                                            "type": "Image",
                                                            "name": "image2",
                                                            "default": null
                                                          }
                                                        ],
                                                        "description": "Calculates the bitwise AND of the input values for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is the union of the input types.",
                                                        "returns": "Image",
                                                        "name": "Image.bitwiseAnd"
                                                      }
                                                    },
                                                    "args": {
                                                      "image1": {
                                                        "xg": {
                                                          "da": {
                                                            "args": [
                                                              {
                                                                "description": "The image to select bands from.",
                                                                "type": "Image",
                                                                "name": "input",
                                                                "default": null
                                                              },
                                                              {
                                                                "description": "A list of names, regexes, or numeric indices specifying the bands to select.",
                                                                "type": "List",
                                                                "name": "bandSelectors",
                                                                "default": null
                                                              },
                                                              {
                                                                "description": "Optional new names for the output bands. Must match the number of bands selected.",
                                                                "type": "List",
                                                                "name": "newNames",
                                                                "default": null,
                                                                "optional": true
                                                              }
                                                            ],
                                                            "description": "Selects bands from an image by name, RE2-compatible regex, or index and optionally renames them.",
                                                            "returns": "Image",
                                                            "name": "Image.select"
                                                          }
                                                        },
                                                        "args": {
                                                          "input": {
                                                            "xg": null,
                                                            "args": null,
                                                            "ol": "_MAPPING_VAR_0_0",
                                                            "la": null
                                                          },
                                                          "bandSelectors": {
                                                            "xg": null,
                                                            "args": null,
                                                            "ol": null,
                                                            "la": null,
                                                            "ca": ["QA_PIXEL"]
                                                          }
                                                        },
                                                        "ol": null,
                                                        "la": null
                                                      },
                                                      "image2": {
                                                        "xg": {
                                                          "da": {
                                                            "args": [
                                                              {
                                                                "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                                                                "type": "Object",
                                                                "name": "value",
                                                                "default": null
                                                              }
                                                            ],
                                                            "description": "Generates an image containing a constant value everywhere.",
                                                            "returns": "Image",
                                                            "name": "Image.constant"
                                                          }
                                                        },
                                                        "args": {
                                                          "value": 8
                                                        },
                                                        "ol": null,
                                                        "la": null
                                                      }
                                                    },
                                                    "ol": null,
                                                    "la": null
                                                  },
                                                  "image2": {
                                                    "xg": {
                                                      "da": {
                                                        "args": [
                                                          {
                                                            "description": "The image from which the left operand bands are taken.",
                                                            "type": "Image",
                                                            "name": "image1",
                                                            "default": null
                                                          },
                                                          {
                                                            "description": "The image from which the right operand bands are taken.",
                                                            "type": "Image",
                                                            "name": "image2",
                                                            "default": null
                                                          }
                                                        ],
                                                        "description": "Calculates the bitwise AND of the input values for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is the union of the input types.",
                                                        "returns": "Image",
                                                        "name": "Image.bitwiseAnd"
                                                      }
                                                    },
                                                    "args": {
                                                      "image1": {
                                                        "xg": {
                                                          "da": {
                                                            "args": [
                                                              {
                                                                "description": "The image to select bands from.",
                                                                "type": "Image",
                                                                "name": "input",
                                                                "default": null
                                                              },
                                                              {
                                                                "description": "A list of names, regexes, or numeric indices specifying the bands to select.",
                                                                "type": "List",
                                                                "name": "bandSelectors",
                                                                "default": null
                                                              },
                                                              {
                                                                "description": "Optional new names for the output bands. Must match the number of bands selected.",
                                                                "type": "List",
                                                                "name": "newNames",
                                                                "default": null,
                                                                "optional": true
                                                              }
                                                            ],
                                                            "description": "Selects bands from an image by name, RE2-compatible regex, or index and optionally renames them.",
                                                            "returns": "Image",
                                                            "name": "Image.select"
                                                          }
                                                        },
                                                        "args": {
                                                          "input": {
                                                            "xg": null,
                                                            "args": null,
                                                            "ol": "_MAPPING_VAR_0_0",
                                                            "la": null
                                                          },
                                                          "bandSelectors": {
                                                            "xg": null,
                                                            "args": null,
                                                            "ol": null,
                                                            "la": null,
                                                            "ca": ["QA_PIXEL"]
                                                          }
                                                        },
                                                        "ol": null,
                                                        "la": null
                                                      },
                                                      "image2": {
                                                        "xg": {
                                                          "da": {
                                                            "args": [
                                                              {
                                                                "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                                                                "type": "Object",
                                                                "name": "value",
                                                                "default": null
                                                              }
                                                            ],
                                                            "description": "Generates an image containing a constant value everywhere.",
                                                            "returns": "Image",
                                                            "name": "Image.constant"
                                                          }
                                                        },
                                                        "args": {
                                                          "value": 16
                                                        },
                                                        "ol": null,
                                                        "la": null
                                                      }
                                                    },
                                                    "ol": null,
                                                    "la": null
                                                  }
                                                },
                                                "ol": null,
                                                "la": null
                                              }
                                            },
                                            "ol": null,
                                            "la": null
                                          }
                                        },
                                        "ol": null,
                                        "la": null
                                      }
                                    }
                                  },
                                  "ol": null
                                }
                              },
                              "ol": null,
                              "la": null
                            },
                            "geometry": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "The geometry being buffered.",
                                      "type": "Geometry",
                                      "name": "geometry",
                                      "default": null
                                    },
                                    {
                                      "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                      "type": "Float",
                                      "name": "distance",
                                      "default": null
                                    },
                                    {
                                      "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                      "type": "ErrorMargin",
                                      "name": "maxError",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                      "type": "Projection",
                                      "name": "proj",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                  "returns": "Geometry",
                                  "name": "Geometry.buffer"
                                }
                              },
                              "args": {
                                "geometry": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "rm": "Point",
                                  "ja": [-45.4559, -22.4262],
                                  "da": null
                                },
                                "distance": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "ca": 5000
                                }
                              },
                              "ol": null,
                              "la": null
                            }
                          },
                          "ol": null,
                          "la": null
                        },
                        "falseCase": {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "The image to clip.",
                                  "type": "Image",
                                  "name": "input",
                                  "default": null
                                },
                                {
                                  "description": "The Geometry or Feature to clip to.",
                                  "type": "Object",
                                  "name": "geometry",
                                  "default": null
                                }
                              ],
                              "description": "Clips an image to a Geometry or Feature (use clipToCollection to clip an image to a FeatureCollection). The output bands correspond exactly to the input bands, except data not covered by the geometry is masked. The output image retains the metadata of the input image.",
                              "returns": "Image",
                              "name": "Image.clip"
                            }
                          },
                          "args": {
                            "input": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "The image to mask with itself.",
                                      "type": "Image",
                                      "name": "image",
                                      "default": null
                                    }
                                  ],
                                  "description": "Updates an image's mask at all positions where the existing mask is not zero using the value of the image as the new mask value. The output image retains the metadata and footprint of the input image.",
                                  "returns": "Image",
                                  "name": "Image.selfMask"
                                }
                              },
                              "args": {
                                "image": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                                          "type": "Object",
                                          "name": "value",
                                          "default": null
                                        }
                                      ],
                                      "description": "Generates an image containing a constant value everywhere.",
                                      "returns": "Image",
                                      "name": "Image.constant"
                                    }
                                  },
                                  "args": {
                                    "value": 0
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              },
                              "ol": null,
                              "la": null
                            },
                            "geometry": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "The geometry being buffered.",
                                      "type": "Geometry",
                                      "name": "geometry",
                                      "default": null
                                    },
                                    {
                                      "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                      "type": "Float",
                                      "name": "distance",
                                      "default": null
                                    },
                                    {
                                      "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                      "type": "ErrorMargin",
                                      "name": "maxError",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                      "type": "Projection",
                                      "name": "proj",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                  "returns": "Geometry",
                                  "name": "Geometry.buffer"
                                }
                              },
                              "args": {
                                "geometry": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "rm": "Point",
                                  "ja": [-45.4559, -22.4262],
                                  "da": null
                                },
                                "distance": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "ca": 5000
                                }
                              },
                              "ol": null,
                              "la": null
                            }
                          },
                          "ol": null,
                          "la": null
                        }
                      },
                      "ol": null,
                      "la": null
                    },
                    "bandSelectors": {
                      "xg": null,
                      "args": null,
                      "ol": null,
                      "la": null,
                      "ca": ["ST_B10"]
                    }
                  },
                  "ol": null,
                  "la": null
                },
                "image2": {
                  "xg": {
                    "da": {
                      "args": [
                        {
                          "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                          "type": "Object",
                          "name": "value",
                          "default": null
                        }
                      ],
                      "description": "Generates an image containing a constant value everywhere.",
                      "returns": "Image",
                      "name": "Image.constant"
                    }
                  },
                  "args": {
                    "value": 0.00341802
                  },
                  "ol": null,
                  "la": null
                }
              },
              "ol": null,
              "la": null
            },
            "image2": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                      "type": "Object",
                      "name": "value",
                      "default": null
                    }
                  ],
                  "description": "Generates an image containing a constant value everywhere.",
                  "returns": "Image",
                  "name": "Image.constant"
                }
              },
              "args": {
                "value": 149
              },
              "ol": null,
              "la": null
            }
          },
          "ol": null,
          "la": null
        },
        "image2": {
          "xg": {
            "da": {
              "args": [
                {
                  "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                  "type": "Object",
                  "name": "value",
                  "default": null
                }
              ],
              "description": "Generates an image containing a constant value everywhere.",
              "returns": "Image",
              "name": "Image.constant"
            }
          },
          "args": {
            "value": 273.15
          },
          "ol": null,
          "la": null
        }
      },
      "ol": null,
      "la": null
    }
  },
  "temperatura_ar": {
    "mapid": "projects/infra-filament-408404/maps/47384be94b0fadd8bf194dc9974175c2-bc8ee921b5f642344ee87675c21b466e",
    "token": "",
    "urlFormat": "https://earthengine.googleapis.com/v1/projects/infra-filament-408404/maps/47384be94b0fadd8bf194dc9974175c2-bc8ee921b5f642344ee87675c21b466e/tiles/{z}/{x}/{y}",
    "image": {
      "xg": {
        "da": {
          "args": [
            {
              "description": "The image from which the left operand bands are taken.",
              "type": "Image",
              "name": "image1",
              "default": null
            },
            {
              "description": "The image from which the right operand bands are taken.",
              "type": "Image",
              "name": "image2",
              "default": null
            }
          ],
          "description": "Subtracts the second value from the first for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is the union of the input types.",
          "returns": "Image",
          "name": "Image.subtract"
        }
      },
      "args": {
        "image1": {
          "xg": {
            "da": {
              "args": [
                {
                  "description": "The image to clip.",
                  "type": "Image",
                  "name": "input",
                  "default": null
                },
                {
                  "description": "The Geometry or Feature to clip to.",
                  "type": "Object",
                  "name": "geometry",
                  "default": null
                }
              ],
              "description": "Clips an image to a Geometry or Feature (use clipToCollection to clip an image to a FeatureCollection). The output bands correspond exactly to the input bands, except data not covered by the geometry is masked. The output image retains the metadata of the input image.",
              "returns": "Image",
              "name": "Image.clip"
            }
          },
          "args": {
            "input": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The image collection to reduce.",
                      "type": "ImageCollection",
                      "name": "collection",
                      "default": null
                    }
                  ],
                  "description": "Reduces an image collection by calculating the mean of all values at each pixel across the stack of all matching bands. Bands are matched by name.",
                  "returns": "Image",
                  "name": "reduce.mean"
                }
              },
              "args": {
                "collection": {
                  "xg": {
                    "da": {
                      "args": [
                        {
                          "description": "The collection of the elements to which the algorithm is applied.",
                          "type": "FeatureCollection",
                          "name": "collection",
                          "default": null
                        },
                        {
                          "description": "The algorithm being applied to each element.",
                          "type": "Algorithm",
                          "name": "baseAlgorithm",
                          "default": null
                        },
                        {
                          "description": "If true, the mapped algorithm is allowed to return nulls, and the elements for which it returns nulls will be dropped.",
                          "type": "Boolean",
                          "name": "dropNulls",
                          "default": false,
                          "optional": true
                        }
                      ],
                      "description": "Maps an algorithm over a collection.",
                      "returns": "FeatureCollection",
                      "name": "Collection.map"
                    }
                  },
                  "args": {
                    "collection": {
                      "xg": {
                        "da": {
                          "args": [
                            {
                              "description": "The collection to filter.",
                              "type": "FeatureCollection",
                              "name": "collection",
                              "default": null
                            },
                            {
                              "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                              "type": "Object",
                              "name": "filter",
                              "default": null
                            }
                          ],
                          "description": "Applies a filter to a given collection.",
                          "returns": "FeatureCollection",
                          "name": "Collection.filter"
                        }
                      },
                      "args": {
                        "collection": {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "The collection to filter.",
                                  "type": "FeatureCollection",
                                  "name": "collection",
                                  "default": null
                                },
                                {
                                  "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                  "type": "Object",
                                  "name": "filter",
                                  "default": null
                                }
                              ],
                              "description": "Applies a filter to a given collection.",
                              "returns": "FeatureCollection",
                              "name": "Collection.filter"
                            }
                          },
                          "args": {
                            "collection": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "The asset ID of the image collection.",
                                      "type": "String",
                                      "name": "id",
                                      "default": null
                                    },
                                    {
                                      "description": "The version of the asset. -1 signifies the latest version.",
                                      "type": "Long",
                                      "name": "version",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Returns the image collection given its ID.",
                                  "returns": "ImageCollection",
                                  "name": "ImageCollection.load"
                                }
                              },
                              "args": {
                                "id": "ECMWF/ERA5_LAND/HOURLY"
                              },
                              "ol": null,
                              "la": null
                            },
                            "filter": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                      "type": "String",
                                      "name": "leftField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                      "type": "Object",
                                      "name": "rightValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                      "type": "String",
                                      "name": "rightField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                      "type": "Object",
                                      "name": "leftValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The maximum reprojection error allowed during filter application.",
                                      "type": "ErrorMargin",
                                      "name": "maxError",
                                      "default": {
                                        "type": "ErrorMargin",
                                        "unit": "meters",
                                        "value": 0.1
                                      },
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                  "returns": "Filter",
                                  "name": "Filter.intersects"
                                }
                              },
                              "args": {
                                "leftField": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "ca": ".all"
                                },
                                "rightValue": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "The geometry of the feature.",
                                          "type": "Geometry",
                                          "name": "geometry",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The properties of the feature.",
                                          "type": "Dictionary",
                                          "name": "metadata",
                                          "default": {},
                                          "optional": true
                                        },
                                        {
                                          "description": "Obsolete; has no effect.",
                                          "type": "String",
                                          "name": "geometryKey",
                                          "default": null,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Returns a Feature composed of the given geometry and metadata.",
                                      "returns": "Feature",
                                      "name": "Feature"
                                    }
                                  },
                                  "args": {
                                    "geometry": {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "The geometry being buffered.",
                                              "type": "Geometry",
                                              "name": "geometry",
                                              "default": null
                                            },
                                            {
                                              "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                              "type": "Float",
                                              "name": "distance",
                                              "default": null
                                            },
                                            {
                                              "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                              "type": "ErrorMargin",
                                              "name": "maxError",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                              "type": "Projection",
                                              "name": "proj",
                                              "default": null,
                                              "optional": true
                                            }
                                          ],
                                          "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                          "returns": "Geometry",
                                          "name": "Geometry.buffer"
                                        }
                                      },
                                      "args": {
                                        "geometry": {
                                          "xg": null,
                                          "args": null,
                                          "ol": null,
                                          "la": null,
                                          "rm": "Point",
                                          "ja": [-45.4559, -22.4262],
                                          "da": null
                                        },
                                        "distance": {
                                          "xg": null,
                                          "args": null,
                                          "ol": null,
                                          "la": null,
                                          "ca": 5000
                                        }
                                      },
                                      "ol": null,
                                      "la": null
                                    }
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              },
                              "ol": null,
                              "la": null,
                              "na": [
                                {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                          "type": "String",
                                          "name": "leftField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                          "type": "Object",
                                          "name": "rightValue",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                          "type": "String",
                                          "name": "rightField",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                          "type": "Object",
                                          "name": "leftValue",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "The maximum reprojection error allowed during filter application.",
                                          "type": "ErrorMargin",
                                          "name": "maxError",
                                          "default": {
                                            "type": "ErrorMargin",
                                            "unit": "meters",
                                            "value": 0.1
                                          },
                                          "optional": true
                                        }
                                      ],
                                      "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                      "returns": "Filter",
                                      "name": "Filter.intersects"
                                    }
                                  },
                                  "args": {
                                    "leftField": {
                                      "xg": null,
                                      "args": null,
                                      "ol": null,
                                      "la": null,
                                      "ca": ".all"
                                    },
                                    "rightValue": {
                                      "xg": {
                                        "da": {
                                          "args": [
                                            {
                                              "description": "The geometry of the feature.",
                                              "type": "Geometry",
                                              "name": "geometry",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The properties of the feature.",
                                              "type": "Dictionary",
                                              "name": "metadata",
                                              "default": {},
                                              "optional": true
                                            },
                                            {
                                              "description": "Obsolete; has no effect.",
                                              "type": "String",
                                              "name": "geometryKey",
                                              "default": null,
                                              "optional": true
                                            }
                                          ],
                                          "description": "Returns a Feature composed of the given geometry and metadata.",
                                          "returns": "Feature",
                                          "name": "Feature"
                                        }
                                      },
                                      "args": {
                                        "geometry": {
                                          "xg": {
                                            "da": {
                                              "args": [
                                                {
                                                  "description": "The geometry being buffered.",
                                                  "type": "Geometry",
                                                  "name": "geometry",
                                                  "default": null
                                                },
                                                {
                                                  "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                                                  "type": "Float",
                                                  "name": "distance",
                                                  "default": null
                                                },
                                                {
                                                  "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                                                  "type": "ErrorMargin",
                                                  "name": "maxError",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                                                  "type": "Projection",
                                                  "name": "proj",
                                                  "default": null,
                                                  "optional": true
                                                }
                                              ],
                                              "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                                              "returns": "Geometry",
                                              "name": "Geometry.buffer"
                                            }
                                          },
                                          "args": {
                                            "geometry": {
                                              "xg": null,
                                              "args": null,
                                              "ol": null,
                                              "la": null,
                                              "rm": "Point",
                                              "ja": [-45.4559, -22.4262],
                                              "da": null
                                            },
                                            "distance": {
                                              "xg": null,
                                              "args": null,
                                              "ol": null,
                                              "la": null,
                                              "ca": 5000
                                            }
                                          },
                                          "ol": null,
                                          "la": null
                                        }
                                      },
                                      "ol": null,
                                      "la": null
                                    }
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              ]
                            }
                          },
                          "ol": null
                        },
                        "filter": {
                          "xg": {
                            "da": {
                              "args": [
                                {
                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                  "type": "String",
                                  "name": "leftField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                  "type": "Object",
                                  "name": "rightValue",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                  "type": "String",
                                  "name": "rightField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                  "type": "Object",
                                  "name": "leftValue",
                                  "default": null,
                                  "optional": true
                                }
                              ],
                              "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                              "returns": "Filter",
                              "name": "Filter.dateRangeContains"
                            }
                          },
                          "args": {
                            "rightField": {
                              "xg": null,
                              "args": null,
                              "ol": null,
                              "la": null,
                              "ca": "system:time_start"
                            },
                            "leftValue": {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "",
                                      "type": "Object",
                                      "name": "start",
                                      "default": null
                                    },
                                    {
                                      "description": "",
                                      "type": "Object",
                                      "name": "end",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                      "type": "String",
                                      "name": "timeZone",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                  "returns": "DateRange",
                                  "name": "DateRange",
                                  "isConstructor": true
                                }
                              },
                              "args": {
                                "start": "2024-01-01",
                                "end": "2024-12-31"
                              },
                              "ol": null,
                              "la": null
                            }
                          },
                          "ol": null,
                          "la": null,
                          "na": [
                            {
                              "xg": {
                                "da": {
                                  "args": [
                                    {
                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                      "type": "String",
                                      "name": "leftField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                      "type": "Object",
                                      "name": "rightValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                      "type": "String",
                                      "name": "rightField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                      "type": "Object",
                                      "name": "leftValue",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                                  "returns": "Filter",
                                  "name": "Filter.dateRangeContains"
                                }
                              },
                              "args": {
                                "rightField": {
                                  "xg": null,
                                  "args": null,
                                  "ol": null,
                                  "la": null,
                                  "ca": "system:time_start"
                                },
                                "leftValue": {
                                  "xg": {
                                    "da": {
                                      "args": [
                                        {
                                          "description": "",
                                          "type": "Object",
                                          "name": "start",
                                          "default": null
                                        },
                                        {
                                          "description": "",
                                          "type": "Object",
                                          "name": "end",
                                          "default": null,
                                          "optional": true
                                        },
                                        {
                                          "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                          "type": "String",
                                          "name": "timeZone",
                                          "default": null,
                                          "optional": true
                                        }
                                      ],
                                      "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                      "returns": "DateRange",
                                      "name": "DateRange",
                                      "isConstructor": true
                                    }
                                  },
                                  "args": {
                                    "start": "2024-01-01",
                                    "end": "2024-12-31"
                                  },
                                  "ol": null,
                                  "la": null
                                }
                              },
                              "ol": null,
                              "la": null
                            }
                          ]
                        }
                      },
                      "ol": null
                    },
                    "baseAlgorithm": {
                      "da": {
                        "name": "",
                        "returns": "Object",
                        "args": [
                          {
                            "name": "_MAPPING_VAR_0_0",
                            "type": "Object"
                          }
                        ]
                      },
                      "ja": {
                        "xg": {
                          "da": {
                            "args": [
                              {
                                "description": "The image to select bands from.",
                                "type": "Image",
                                "name": "input",
                                "default": null
                              },
                              {
                                "description": "A list of names, regexes, or numeric indices specifying the bands to select.",
                                "type": "List",
                                "name": "bandSelectors",
                                "default": null
                              },
                              {
                                "description": "Optional new names for the output bands. Must match the number of bands selected.",
                                "type": "List",
                                "name": "newNames",
                                "default": null,
                                "optional": true
                              }
                            ],
                            "description": "Selects bands from an image by name, RE2-compatible regex, or index and optionally renames them.",
                            "returns": "Image",
                            "name": "Image.select"
                          }
                        },
                        "args": {
                          "input": {
                            "xg": null,
                            "args": null,
                            "ol": "_MAPPING_VAR_0_0",
                            "la": null
                          },
                          "bandSelectors": {
                            "xg": null,
                            "args": null,
                            "ol": null,
                            "la": null,
                            "ca": ["temperature_2m"]
                          }
                        },
                        "ol": null,
                        "la": null
                      }
                    }
                  },
                  "ol": null
                }
              },
              "ol": null,
              "la": null
            },
            "geometry": {
              "xg": {
                "da": {
                  "args": [
                    {
                      "description": "The geometry being buffered.",
                      "type": "Geometry",
                      "name": "geometry",
                      "default": null
                    },
                    {
                      "description": "The distance of the buffering, which may be negative. If no projection is specified, the unit is meters. Otherwise the unit is in the coordinate system of the projection.",
                      "type": "Float",
                      "name": "distance",
                      "default": null
                    },
                    {
                      "description": "The maximum amount of error tolerated when approximating the buffering circle and performing any necessary reprojection. If unspecified, defaults to 1% of the distance.",
                      "type": "ErrorMargin",
                      "name": "maxError",
                      "default": null,
                      "optional": true
                    },
                    {
                      "description": "If specified, the buffering will be performed in this projection and the distance will be interpreted as units of the coordinate system of this projection. Otherwise the distance is interpereted as meters and the buffering is performed in a spherical coordinate system.",
                      "type": "Projection",
                      "name": "proj",
                      "default": null,
                      "optional": true
                    }
                  ],
                  "description": "Returns the input buffered by a given distance. If the distance is positive, the geometry is expanded, and if the distance is negative, the geometry is contracted.",
                  "returns": "Geometry",
                  "name": "Geometry.buffer"
                }
              },
              "args": {
                "geometry": {
                  "xg": null,
                  "args": null,
                  "ol": null,
                  "la": null,
                  "rm": "Point",
                  "ja": [-45.4559, -22.4262],
                  "da": null
                },
                "distance": {
                  "xg": null,
                  "args": null,
                  "ol": null,
                  "la": null,
                  "ca": 5000
                }
              },
              "ol": null,
              "la": null
            }
          },
          "ol": null,
          "la": null
        },
        "image2": {
          "xg": {
            "da": {
              "args": [
                {
                  "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                  "type": "Object",
                  "name": "value",
                  "default": null
                }
              ],
              "description": "Generates an image containing a constant value everywhere.",
              "returns": "Image",
              "name": "Image.constant"
            }
          },
          "args": {
            "value": 273.15
          },
          "ol": null,
          "la": null
        }
      },
      "ol": null,
      "la": null
    }
  }
}
